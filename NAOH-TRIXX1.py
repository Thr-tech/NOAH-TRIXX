# ENCRYPTED by PY-ENCODE
# Created by B14CK-KN1GH7 (NAFIS-FUAD)
# Facebook : http://facebook.com/nafis.fuad.904
# Github : http://github.com/nfs-tech-bd

import base64
exec(base64.b64decode('IiIiDQoNClJFVkVSU0UgRE9ORSBCWSBOT0FIIFRSSVhYDQoNCiIiIg0KDQojLS0tLS0tLS0tLS0tLS0tLS1bIGJsYWNrLU5PQUggVFJJWFggIF0tLS0tLS0tLS0tLS0tLS0tLS0tIw0KIA0KaW1wb3J0IHJlcXVlc3RzLGJzNCxqc29uLG9zLHN5cyxyYW5kb20sZGF0ZXRpbWUsdGltZSxyZQ0KaW1wb3J0IHVybGxpYjMscmljaCxiYXNlNjQNCmZyb20gcmljaC50YWJsZSBpbXBvcnQgVGFibGUgYXMgbWUNCmZyb20gcmljaC5jb25zb2xlIGltcG9ydCBDb25zb2xlIGFzIHNvbA0KZnJvbSBiczQgaW1wb3J0IEJlYXV0aWZ1bFNvdXAgYXMgc29wDQpmcm9tIGNvbmN1cnJlbnQuZnV0dXJlcyBpbXBvcnQgVGhyZWFkUG9vbEV4ZWN1dG9yIGFzIHRyZWQNCmZyb20gcmljaC5jb25zb2xlIGltcG9ydCBHcm91cCBhcyBncA0KZnJvbSByaWNoLnBhbmVsIGltcG9ydCBQYW5lbCBhcyBuZWwNCmZyb20gcmljaC5tYXJrZG93biBpbXBvcnQgTWFya2Rvd24gYXMgbWFyaw0KZnJvbSByaWNoLmNvbHVtbnMgaW1wb3J0IENvbHVtbnMgYXMgY29sDQpmcm9tIHJpY2ggaW1wb3J0IHByZXR0eQ0KZnJvbSByaWNoLnRleHQgaW1wb3J0IFRleHQgYXMgdGVreg0KZnJvbSB0aW1lIGltcG9ydCBsb2NhbHRpbWUgYXMgbHQNCnByZXR0eS5pbnN0YWxsKCkNCkNPTj1zb2woKQ0KICMtLS0tLS0tLS0tLS0tLS0tLS1bIGJsYWNrIE5PQUhdLS0tLS0tLS0tLS0tLS0tLS0tLSMNCmltcG9ydCBvcywgcGxhdGZvcm0sIHRpbWUsIHN5cw0Kb3Muc3lzdGVtKCdwaXAgaW5zdGFsbCBodHRweCBwaXAgaW5zdGFsbCBiZWF1dGlmdWxzb3VwNCcpDQpvcy5zeXN0ZW0oJ3BpcCBpbnN0YWxsIHJlcXVlc3RzICcpDQpvcy5zeXN0ZW0oJ3BpcCBpbnN0YWxsIGJzNCcpDQojb3Muc3lzdGVtKCdwaXAgaW5zdGFsbCByaWNoJykNCiNvcy5zeXN0ZW0oJ3BpcCBpbnN0YWxsIHVyaWxsYjMnKQ0Kb3Muc3lzdGVtKCJwa2cgaW5zdGFsbCBlc3BlYWsiKQ0KI29zLnN5c3RlbSgnY2xlYXInKQ0Kb3Muc3lzdGVtKCdjbGVhcicpDQoNCnByaW50KCdcMDMzWzk3OzFtW1x4MWJbMzg7NTs1MG0rXDAzM1s5NzsxbV0gXHgxYlszODs1OzUwbUNIRUNLSU5HIFVQREFURS4uLj8gJykNCm9zLnN5c3RlbSgiZXNwZWFrIC1hIDMwMCBcIkNoZWNraW5nLFVwZGF0ZSxcIiIpDQp0aW1lLnNsZWVwKDIpDQojb3Muc3lzdGVtKCdjbGVhcicpDQpwcmludCgnXDAzM1s5NzsxbVtceDFiWzM4OzU7NTBtK1wwMzNbOTc7MW1dIFx4MWJbMzg7NTs1MG1VUERBVEUgVkVSU0hPTiAyLjBWLi4uISAnKQ0Kb3Muc3lzdGVtKCJlc3BlYWsgLWEgMzAwIFwiVVBEQVRFIFZFUlNJT04gMi4wVixcIiIpDQp0aW1lLnNsZWVwKDAuNSkNCiNvcy5zeXN0ZW0oJ2NsZWFyJykNCnByaW50KCJcMDMzWzk3OzFtW1x4MWJbMzg7NTs1MG0rXDAzM1s5NzsxbV1ceDFiWzM4OzU7NTBtIFNVQlNDUklCRSBNWSBZT1VUVUJFIENIQU5ORUwuLiEiKQ0Kb3Muc3lzdGVtKCJlc3BlYWsgLWEgMzAwIFwiU1VCU0NSSUJFLE1ZLFlPVVRVQkUsQ0hBTk5FTCxcIiIpDQp0aW1lLnNsZWVwKDAuNSkNCm9zLnN5c3RlbShmInhkZy1vcGVuIGh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL0BtdV9zaWNfbG9maSAiKQ0KcHJpbnQoIlwwMzNbOTE7MW1bXHgxYlszODs1OzUwbStcMDMzWzkxOzFtXVx4MWJbMzg7NTs1MG0gZXNwZWFrIC1hIDMwMCBKT0lOIG9uIG15IGZhY2Vib29rIGdyb3VwLi4hIikNCm9zLnN5c3RlbShmJ3hkZy1vcGVuIGh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9zaGFyZS80TXhIeFlSRlhzWnVqTVBnLz9taWJleHRpZD1BN3NRWnAnKQ0KdGltZS5zbGVlcCgwLjUpDQojI29zLnN5c3RlbSgiZXNwZWFrIC1hIDMwMCBcIkVudGVyLFVzZXJuYW1lLGFuZCxwYXNzd29yZCwgXCIiKSMjDQojLS0tLS0tLS0tLS0tLS0tLS0tWyBOT0FIXS0tLS0tLS0tLS0tLS0tLS0tLS0jDQojLS0tLS0tLS0tLS0tLS0tLS0tWyBVU0VSLUFHRU5UIF0tLS0tLS0tLS0tLS0tLS0tLS0tIw0KdWEgPSBbIk1vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMDsgU00tQTQwNUZOIEJ1aWxkL1FQMUEuMTkwNzExLjAyMDsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS8xMTcuMC4wLjAgTW9iaWxlIFNhZmFyaS81MzcuMzYgW0ZCX0lBQi9GQjRBO0ZCQVYvNDMyLjAuMC4yOS4xMDIiLF0NCnVhID0gWyJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTE7IFNNLUExMjdGIEJ1aWxkL1JQMUEuMjAwNzIwLjAxMjsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS8xMTYuMC4wLjAgTW9iaWxlIFNhZmFyaS81MzcuMzYgW0ZCX0lBQi9GQjRBO0ZCQVYvNDMxLjAuMC4zMC4xMDgiLF0NCnVhID0gWyJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTM7IFNNLVM5MThCIEJ1aWxkL1RQMUEuMjIwNjI0LjAxNDsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS8xMTcuMC4wLjAgTW9iaWxlIFNhZmFyaS81MzcuMzYgW0ZCX0lBQi9GQjRBO0ZCQVYvNDMzLjAuMC4zMS4xMTEiLF0NCnVhID0gWyJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTI7IFNNLUExMTVGIEJ1aWxkL1NQMUEuMjEwODEyLjAxNjsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS8xMTYuMC4wLjAgTW9iaWxlIFNhZmFyaS81MzcuMzYgW0ZCX0lBQi9GQjRBO0ZCQVYvNDMyLjAuMC4yOS4xMDIiLF0NCnVhID0gWyJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTI7IENSVC1MWDIgQnVpbGQvSE9OT1JDUlQtTDMyOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzExNy4wLjAuMCBNb2JpbGUgU2FmYXJpLzUzNy4zNiBbRkJfSUFCL0ZCNEE7RkJBVi80MzIuMC4wLjI5LjEwMiIsXQ0KdWEgPSBbIk1vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMjsgQU5HLUFOMDAgQnVpbGQvSFVBV0VJQU5HLUFOMDA7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvOTIuMC40NTE1LjEwNSBNb2JpbGUgU2FmYXJpLzUzNy4zNiBbRkJfSUFCL0ZCNEE7RkJBVi8zOTYuMS4wLjI4LjEwNCIsXQ0KdWEgPSBbIk1vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMDsgTkVPLUFMMDAgQnVpbGQvSFVBV0VJTkVPLUFMMDA7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvMTE3LjAuMC4wIE1vYmlsZSBTYWZhcmkvNTM3LjM2IFtGQl9JQUIvRkI0QTtGQkFWLzQzMi4wLjAuMjkuMTAyIixdDQp1YSA9IFsiTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEzOyBJbmZpbml4IFg2NzEwIEJ1aWxkL1RQMUEuMjIwNjI0LjAxNDsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS8xMTYuMC4wLjAgTW9iaWxlIFNhZmFyaS81MzcuMzYgW0ZCX0lBQi9GQjRBO0ZCQVYvNDMyLjAuMC4yOS4xMDI7XSIsXQ0KdWEgPSBbIk1vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMjsgSW5maW5peCBYNjc2QiBCdWlsZC9TUDFBLjIxMDgxMi4wMTY7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvMTE3LjAuMC4wIE1vYmlsZSBTYWZhcmkvNTM3LjM2IFtGQl9JQUIvRkI0QTtGQkFWLzQzMy4wLjAuMzEuMTExIixdDQp1YSA9IFsiTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDExOyBJbmZpbml4IFg2ODE2RCBCdWlsZC9SUDFBLjIwMTAwNS4wMDE7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvMTE2LjAuMC4wIE1vYmlsZSBTYWZhcmkvNTM3LjM2W0ZCQU4vRU1BO0ZCTEMvcGxfUEw7RkJBVi8zNzMuMS4wLjguMTA0IixdDQogDQp1Z2VuMj1bXQ0KdWdlbj1bXQ0KY29rYnJ1dD1bXQ0Kc2VzPXJlcXVlc3RzLlNlc3Npb24oKQ0KcHJpbkNQPVtdDQp0cnk6DQogICAgcHJveD0gcmVxdWVzdHMuZ2V0KCdodHRwczovL2dpdGh1Yi5jb20vVGhyLXRlY2gvTk9BSC1UUklYWC9ibG9iL21haW4vTk9BSCUyMC1UUklYWC50eHQnKS50ZXh0DQogICAgb3BlbignLnByb3gudHh0JywndycpLndyaXRlKHByb3gpDQpleGNlcHQgRXhjZXB0aW9uIGFzIGU6DQogICAgcGFzcw0KcHJveD1vcGVuKCcucHJveC50eHQnLCdyJykucmVhZCgpLnNwbGl0bGluZXMoKQ0KZm9yIHhkIGluIHJhbmdlKDEwMDAwKToNCiAgICBhPSdNb3ppbGxhLzUuMCAoU3ltYmlhbi8zOyBTZXJpZXM2MC8nDQogICAgYj1yYW5kb20ucmFuZHJhbmdlKDEsIDkpDQogICAgYz1yYW5kb20ucmFuZHJhbmdlKDEsIDkpDQogICAgZD0nU2Ftc3VuZ0Jyb3dzZXInDQogICAgZT1yYW5kb20ucmFuZHJhbmdlKDEwMCwgOTk5OSkNCiAgICBmPSdORU8tQUwwMCBCdWlsZC9IVUFXRUlORU8tQUwwMDsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS8nDQogICAgZz1yYW5kb20ucmFuZHJhbmdlKDEsIDkpDQogICAgaD1yYW5kb20ucmFuZHJhbmdlKDEsIDQpDQogICAgaT1yYW5kb20ucmFuZHJhbmdlKDEsIDQpDQogICAgaj1yYW5kb20ucmFuZHJhbmdlKDEsIDQpDQogICAgaz0nTW9iaWxlIFNhZmFyaS81MzcuMzYnDQogICAgdWFrdT0oZid7YX17Yn0ue2N9IHtkfXtlfXtmfXtnfS57aH0ue2l9LntqfSB7a30nKQ0KICAgIHVnZW4yLmFwcGVuZCh1YWt1KQ0KICAgIA0KICAgIGFhPSdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTInDQogICAgYj1yYW5kb20uY2hvaWNlKFsnNicsJzcnLCc4JywnOScsJzEwJywnMTEnLCcxMiddKQ0KICAgIGM9JyBlbi11czsgR1QtJw0KICAgIGQ9cmFuZG9tLmNob2ljZShbJ0EnLCdCJywgJ0MnLCAnRCcsICdFJywgJ0YnLCAnRycsICdIJywgJ0knLCAnSicsICdLJywgJ0wnLCAnTScsICdOJywgJ08nLCAnUCcsICdRJywgJ1InLCAnUycsICdUJywgJ1UnLCAnVicsICdXJywgJ1gnLCAnWScsICdaJ10pDQogICAgZT1yYW5kb20ucmFuZHJhbmdlKDEsIDk5OSkNCiAgICBmPXJhbmRvbS5jaG9pY2UoWydBJywnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCcsICdJJywgJ0onLCAnSycsICdMJywgJ00nLCAnTicsICdPJywgJ1AnLCAnUScsICdSJywgJ1MnLCAnVCcsICdVJywgJ1YnLCAnVycsICdYJywgJ1knLCAnWiddKQ0KICAgIGc9J0FORy1BTjAwIEJ1aWxkL0hVQVdFSUFORy1BTjAwOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLycNCiAgICBoPXJhbmRvbS5yYW5kcmFuZ2UoNzMsMTAwKQ0KICAgIGk9JzAnDQogICAgaj1yYW5kb20ucmFuZHJhbmdlKDQyMDAsNDkwMCkNCiAgICBrPXJhbmRvbS5yYW5kcmFuZ2UoNDAsMTE1KQ0KICAgIGw9J01vYmlsZSBTYWZhcmkvNTM3LjM2Jw0KICAgIHVha3UyPWYne2FhfSB7Yn07IHtjfXtkfXtlfXtmfSkge2d9e2h9LntpfS57an0ue2t9IHtsfScNCiAgICB1Z2VuLmFwcGVuZCh1YWt1MikNCmZvciB4IGluIHJhbmdlKDEwKToNCiAgICBhPSdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTInDQogICAgYj1yYW5kb20ucmFuZHJhbmdlKDEwMCwgOTk5OSkNCiAgICBjPXJhbmRvbS5yYW5kcmFuZ2UoMTAwLCA5OTk5KQ0KICAgIGQ9cmFuZG9tLmNob2ljZShbJ0EnLCdCJywgJ0MnLCAnRCcsICdFJywgJ0YnLCAnRycsICdIJywgJ0knLCAnSicsICdLJywgJ0wnLCAnTScsICdOJywgJ08nLCAnUCcsICdRJywgJ1InLCAnUycsICdUJywgJ1UnLCAnVicsICdXJywgJ1gnLCAnWScsICdaJ10pDQogICAgZT1yYW5kb20uY2hvaWNlKFsnQScsJ0InLCAnQycsICdEJywgJ0UnLCAnRicsICdHJywgJ0gnLCAnSScsICdKJywgJ0snLCAnTCcsICdNJywgJ04nLCAnTycsICdQJywgJ1EnLCAnUicsICdTJywgJ1QnLCAnVScsICdWJywgJ1cnLCAnWCcsICdZJywgJ1onXSkNCiAgICBmPXJhbmRvbS5jaG9pY2UoWydBJywnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCcsICdJJywgJ0onLCAnSycsICdMJywgJ00nLCAnTicsICdPJywgJ1AnLCAnUScsICdSJywgJ1MnLCAnVCcsICdVJywgJ1YnLCAnVycsICdYJywgJ1knLCAnWiddKQ0KICAgIGc9cmFuZG9tLmNob2ljZShbJ0EnLCdCJywgJ0MnLCAnRCcsICdFJywgJ0YnLCAnRycsICdIJywgJ0knLCAnSicsICdLJywgJ0wnLCAnTScsICdOJywgJ08nLCAnUCcsICdRJywgJ1InLCAnUycsICdUJywgJ1UnLCAnVicsICdXJywgJ1gnLCAnWScsICdaJ10pDQogICAgaD1yYW5kb20ucmFuZHJhbmdlKDEsIDkpDQogICAgaT0nU00tQTExNUYgQnVpbGQvU1AxQS4yMTA4MTIuMDE2OyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLycNCiAgICBqPXJhbmRvbS5yYW5kcmFuZ2UoMSwgOSkNCiAgICBrPXJhbmRvbS5yYW5kcmFuZ2UoMSwgOSkNCiAgICBsPSdNb2JpbGUgV1ZHQSBTTU0tTU1TLzEuMi4wIE9QTi1CJw0KICAgIHVhaz1mJ3thfXtifS97Y317ZH17ZX17Zn17Z317aH17aX17an0ue2t9IHtsfScNCmRlZiB1YWt1KCk6DQogICAgdHJ5Og0KICAgICAgICB1YT1vcGVuKCdiYm5ldy50eHQnLCdyJykucmVhZCgpLnNwbGl0bGluZXMoKQ0KICAgICAgICBmb3IgdWIgaW4gdWE6DQogICAgICAgICAgICB1Z2VuLmFwcGVuZCh1YikNCiAgICBleGNlcHQ6DQogICAgICAgIGE9cmVxdWVzdHMuZ2V0KCdodHRwczovL2dpdGh1Yi5jb20vVGhyLXRlY2gvTk9BSC1UUklYWC9ibG9iL21haW4vTk9BSCUyMC1UUklYWC50eHQnKS50ZXh0DQogICAgICAgIHVhPW9wZW4oJ2JibmV3LnR4dCcsJ3cnKQ0KICAgICAgICBhYT1yZS5maW5kYWxsKCdsaW5lIj4oLio/KTwnLHN0cihhKSkNCiAgICAgICAgZm9yIHVuIGluIGFhOg0KICAgICAgICAgICAgdWEud3JpdGUodW4rJ1xuJykNCiAgICAgICAgdWE9b3BlbignYmJuZXcudHh0JywncicpLnJlYWQoKS5zcGxpdGxpbmVzKCkNCiANCiMtLS0tLS0tLS0tLS1bIElORElDQVRJT04gXS0tLS0tLS0tLS0tLS0tLSMNCmlkLGlkMixsb29wLG9rLGNwLGFrdW4sb3ByZWssbWV0aG9kLGxpc2Vuc2lrdSx0YXBsaWthc2ksdG9rZW5rdSx1aWQsbGlzZW5zaWt1bmk9IFtdLFtdLDAsMCwwLFtdLFtdLFtdLFtdLFtdLFtdLFtdLFtdDQpjb2ticnV0PVtdDQpwd3BsdXNzLHB3bnlhPVtdLFtdDQogDQogDQoNCiMtLS0tLS0tLS0tLS1bIE5PQUggLVRSSVhYLSBdLS0tLS0tLS0tLS0tLS0jDQogDQpQID0gJ1x4MWJbMTs5N20nDQpNID0gJ1x4MWJbMTs5MW0nDQpIID0gJ1x4MWJbMTs5Mm0nDQpLID0gJ1x4MWJbMTs5M20nDQpCID0gJ1x4MWJbMTs5NG0nDQpVID0gJ1x4MWJbMTs5NW0nIA0KTyA9ICdceDFiWzM4OzU7NTBtJw0KTiA9ICdceDFiWzBtJyAgICANClogPSAiXDAzM1sxOzMwbSINCnNpciA9ICdcMDMzWzQxbVx4MWJbMTs5N20nDQp4ID0gJ1wzM1ttJyAjIERFRkFVTFQNCm0gPSAnXHgxYlsxOzkxbScgI1JFRCArDQprID0gJ1wwMzNbOTNtJyAjIEtVTklORyArDQpoID0gJ1x4MWJbMTs5Mm0nICMgSElKQVUgKw0KaGggPSAnXDAzM1szMm0nICMgSElKQVUgLQ0KdSA9ICdcMDMzWzk1bScgIyBVTkdVDQprayA9ICdcMDMzWzMzbScgIyBLVU5JTkcgLQ0KYiA9ICdcMzNbMTs5Nm0nICMgQklSVSAtDQpwID0gJ1x4MWJbMDszNG0nICMgQklSVSArDQphc3UgPSByYW5kb20uY2hvaWNlKFttLGssaCx1LGJdKQ0KIA0KIyMjLS0tLS0tLS0tLVsgQU5TSUkgQ09MT1IgU1RZTEUgXS0tLS0tLS0tLS0gIyMjDQogDQpaID0gIlx4MWJbMDs5MG0iICAgICAjIEhpdGFtDQpNID0gIlx4MWJbMzg7NTsxOTZtIiAjIE1lcmFoDQpIID0gIlx4MWJbMzg7NTs0Nm0iICAjIEhpamF1DQpLID0gIlx4MWJbMzg7NTsyMjZtIiAjIEt1bmluZw0KQiA9ICJceDFiWzM4OzU7NDRtIiAgIyBCaXJ1DQpVID0gIlx4MWJbMDs5NW0iICAgICAjIFVuZ3UNCk8gPSAiXHgxYlswOzk2bSIgICAgICMgQmlydSBNdWRhDQpQID0gIlx4MWJbMzg7NTsyMzFtIiAjIFB1dGloDQpKID0gIlx4MWJbMzg7NTsyMDhtIiAjIEppbmdnYQ0KQSA9ICJceDFiWzM4OzU7MjQ4bSIgIyBBYnUtQWJ1DQogDQojIyMtLS0tLS0tLS0tWyBSSUNIIENPTE9SIFNUWUxFIF0tLS0tLS0tLS0tICMjIw0KIA0KWjIgPSAiWyMwMDAwMDBdIiAjIEhpdGFtDQpNMiA9ICJbI0ZGMDAwMF0iICMgTWVyYWgNCkgyID0gIlsjMDBGRjAwXSIgIyBIaWphdQ0KSzIgPSAiWyNGRkZGMDBdIiAjIEt1bmluZw0KQjIgPSAiWyMwMEM4RkZdIiAjIEJpcnUNClUyID0gIlsjQUYwMEZGXSIgIyBVbmd1DQpOMiA9ICJbI0ZGMDBGRl0iICMgUGluaw0KTzIgPSAiWyMwMEZGRkZdIiAjIEJpcnUgTXVkYQ0KUDIgPSAiWyNGRkZGRkZdIiAjIFB1dGloDQpKMiA9ICJbI0ZGOEYwMF0iICMgSmluZ2dhDQpBMiA9ICJbI0FBQUFBQV0iICMgQWJ1LUFidQ0KIA0KIy0tLS0tLS0tLS0tLS0tLS0tLS0tWyBDT05WRVJURVItQlVMQU4gXS0tLS0tLS0tLS0tLS0tIw0KIA0KZGljID0geycxJzonSmFudWFyeScsJzInOidGZWJydWFyeScsJzMnOidNYXJjaCcsJzQnOidBcHJpbCcsJzUnOidNYXknLCc2JzonSnVuZScsJzcnOidKdWx5JywnOCc6J0F1Z3VzdCcsJzknOidTZXB0ZW1iZXInLCcxMCc6J09jdG9iZXInLCcxMSc6J05vdmVtYmVyJywnMTInOidEZWNlbWJlcid9DQpkaWMyID0geycwMSc6J0phbnVhcnknLCcwMic6J0ZlYnJ1YXJ5JywnMDMnOidNYXJjaCcsJzA0JzonQXByaWwnLCcwNSc6J01heScsJzA2JzonSnVuZScsJzA3JzonSnVseScsJzA4JzonQXVndXN0JywnMDknOidTZXB0ZW1iZXInLCcxMCc6J09jdG9iZXInLCcxMSc6J05vdmVtYmVyJywnMTInOidEZXZlbWJlcid9DQp0Z2wgPSBkYXRldGltZS5kYXRldGltZS5ub3coKS5kYXkNCmJsbiA9IGRpY1soc3RyKGRhdGV0aW1lLmRhdGV0aW1lLm5vdygpLm1vbnRoKSldDQp0aG4gPSBkYXRldGltZS5kYXRldGltZS5ub3coKS55ZWFyDQpva2MgPSAnT0stJytzdHIodGdsKSsnLScrc3RyKGJsbikrJy0nK3N0cih0aG4pKycudHh0Jw0KQ1BjID0gJ0NQLScrc3RyKHRnbCkrJy0nK3N0cihibG4pKyctJytzdHIodGhuKSsnLnR4dCcNCmRhdGUgPSBzdHIodGdsKSsnLycrc3RyKGJsbikrJy8nK3N0cih0aG4pDQpsdHggPSBpbnQobHQoKVszXSkNCmlmIGx0eCA+IDEyOg0KICAgIGEgPSBsdHgtMTINCiAgICB0YWcgPSAiUE0iDQplbHNlOg0KICAgIGEgPSBsdHgNCiAgICB0YWcgPSAiQU0iDQogICAgZGVmIGFsdmlub194eSh1KToNCiAgICAgICAgZm9yIGUgaW4gdSArICJcbiI6c3lzLnN0ZG91dC53cml0ZShlKTtzeXMuc3Rkb3V0LmZsdXNoKCk7dGltZS5zbGVlcCgwLjAwNSkNCmRlZiBUVVRVTGoodSk6DQogICAgICAgIGZvciBlIGluIHUgKyAiXG4iOnN5cy5zdGRvdXQud3JpdGUoZSk7c3lzLnN0ZG91dC5mbHVzaCgpO3RpbWUuc2xlZXAoMC4wMSkNCmRlZiBjbGVhcigpOg0KCW9zLnN5c3RlbSgnY2xlYXInKQ0KIy0tLS0tLS0tLS0tLS0tLS0tLVsgTUFJTiBdLS0tLS0tLS0tLS0tLS0tLS0jDQojLS0tLS0tLS0tLS0tLS0tLS0tWyBNQUNISU5FLVNVUFBPUlQgXS0tLS0tLS0tLS0tLS0tLSMNCiANCmRlZiBhbHZpbm9feHkodSk6DQogICAgICAgIGZvciBlIGluIHUgKyAiXG4iOnN5cy5zdGRvdXQud3JpdGUoZSk7c3lzLnN0ZG91dC5mbHVzaCgpO3RpbWUuc2xlZXAoMC4wMDUpDQpkZWYgY2xlYXIoKToNCiAgICBvcy5zeXN0ZW0oJ2NsZWFyJykNCmRlZiBiYWNrKCk6DQogICAgbG9naW4oKQ0KZGVmIGNvbnRhY3QoKToNCiAgICBvcy5zeXN0ZW0oJ3hkZy1vcGVuIGh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9BVEYuQk9ULk1BS0VSP21pYmV4dGlkPVpiV0t3TGUnKQ0KICAgIGJhY2soKQ0KZGVmIGxpbmV4KCk6DQogICAgcHJpbnQoJ1wwMzNbMTszN20nKQ0KZGVmIGFuaW1hdGlvbih1KToNCiAgICBmb3IgZSBpbiB1ICsgIlxuIjpzeXMuc3Rkb3V0LndyaXRlKGUpO3N5cy5zdGRvdXQuZmx1c2goKTt0aW1lLnNsZWVwKDAuMDEpDQpvcy5zeXN0ZW0oJ3hkZy1vcGVuIGh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9BVEYuQk9ULk1BS0VSP21pYmV4dGlkPVpiV0t3TCcpDQpsb2dvID0oZiIiIg0KXDAzM1swOzkybeKVlOKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKVlw0KIOKVkSAgIFwwMzNbMDs5Mm1fXyAgICBfXyAgIF9fX19fXyAgICBfX19fX18gICBfXyAgICBfXyAgICAgICBfX19fX19fXyAgX19fX19fXyAgIF9fX19fXyAgX18gICAgX18gIF9fICAgIF9fIA0K4pWRICAgXDAzM1swOzkzbS8gIFwgIC8gIHwgLyAgICAgIFwgIC8gICAgICBcIC8gIHwgIC8gIHwgICAgIC8gICAgICAgIHwvICAgICAgIFwgLyAgICAgIHwvICB8ICAvICB8LyAgfCAgLyAgfA0K4pWRICAgXDAzM1swOzkxbSQkICBcICQkIHwvJCQkJCQkICB8LyQkJCQkJCAgfCQkIHwgICQkIHwgICAgICQkJCQkJCQkLyAkJCQkJCQkICB8JCQkJCQkLyAkJCB8ICAkJCB8JCQgfCAgJCQgfA0K4pWRICAgXDAzM1swOzkxbSQkJCAgXCQkIHwkJCB8ICAkJCB8JCQgfF9fJCQgfCQkIHxfXyQkIHwgX19fX19fICQkIHwgICAkJCB8X18kJCB8ICAkJCB8ICAkJCAgXC8kJC8gJCQgIFwvJCQvIA0K4pWRICAgXDAzM1swOzkxbSQkJCQgICQkIHwkJCB8ICAkJCB8JCQgICAgJCQgfCQkICAgICQkIHwvICAgICAgfCQkIHwgICAkJCAgICAkJDwgICAkJCB8ICAgJCQgICQkPCAgICQkICAkJDwgIA0K4pWRICAgXDAzM1swOzk0bSQkICQkICQkIHwkJCB8ICAkJCB8JCQkJCQkJCQgfCQkJCQkJCQkIHwkJCQkJCQvICQkIHwgICAkJCQkJCQkICB8ICAkJCB8ICAgICQkJCQgIFwgICAkJCQkICBcIA0K4pWRICAgXDAzM1swOzkybSQkIHwkJCQkIHwkJCBcX18kJCB8JCQgfCAgJCQgfCQkIHwgICQkIHwgICAgICAgICQkIHwgICAkJCB8ICAkJCB8IF8kJCB8XyAgJCQgLyQkICB8ICQkIC8kJCAgfA0K4pWRICAgXDAzM1swOzkxbSQkIHwgJCQkIHwkJCAgICAkJC8gJCQgfCAgJCQgfCQkIHwgICQkIHwgICAgICAgICQkIHwgICAkJCB8ICAkJCB8LyAkJCAgIHwkJCB8ICAkJCB8JCQgfCAgJCQgfA0K4pWRICAgXDAzM1swOzkzbSQkLyAgICQkLyAgJCQkJCQkLyAgJCQvICAgJCQvICQkLyAgICQkLyAgICAgICAgICQkLyAgICAkJC8gICAkJC8gJCQkJCQkLyAkJC8gICAkJC8gJCQvICAgJCQvIA0KXDAzM1swOzkybeKVmuKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKVnSAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANClwwMzNbMDs5Mm0NCiAkJCQkJCRcICAgICAgICAgICAgJCQkJCQkJFwgICQkJCQkJCQkXCANCiQkICBfXyQkXCAgICAgICAgICAgJCQgIF9fJCRcICQkICBfX19fX3wNCiQkIC8gIFxfX3wgJCQkJCQkXCAgJCQgfCAgJCQgfCQkIHwgICAgICANCiQkIHwgICAgICAkJCAgX18kJFwgJCQgfCAgJCQgfCQkJCQkXCAgICANCiQkIHwgICAgICAkJCAvICAkJCB8JCQgfCAgJCQgfCQkICBfX3wgICANCiQkIHwgICQkXCAkJCB8ICAkJCB8JCQgfCAgJCQgfCQkIHwgICAgICANClwkJCQkJCQgIHxcJCQkJCQkICB8JCQkJCQkJCAgfCQkJCQkJCQkXCANCiBcX19fX19fLyAgXF9fX19fXy8gXF9fX19fX18vIFxfX19fX19fX3wNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICDwnZmG8J2ZgPCdmZQg8J2ZkPCdmY7wnZmA8J2ZjSDwnZmJ8J2YvPCdmYjwnZmAPSDwnZmJ8J2YvPCdmYrwnZmDDQogICAgICAgICAgICAgICAgICAgICAgICAgICAg8J2ZhvCdmYDwnZmUIPCdmYvwnZi88J2ZjvCdmY7wnZmS8J2ZivCdmY3wnZi/PfCdmY/wnZmN8J2ZhPCdmZPwnZmTICAgICAgIA0KDQrilZTilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilZcNCuKVkVwzM1swOzQxbSAgICAgICAgWyDwnZmQ8J2ZjvCdmYAg8J2Yv/CdmLzwnZmP8J2YvCAv8J2Zj/CdmY3wnZmUIPCdmZLwnZmE8J2ZgfCdmYRdICAgICAgICAgXDAzM1swOzkybeKVkQ0K4pWa4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pWdDQpcMDMzWzA7OTRt4pWU4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pWXXDAzM1sxOzMzbSANCuKVoOKVkOKVkFvwnZi88J2ZkPCdmY/wnZmD8J2ZgPCdmY0gICAgICAgICAgICAgICAgICAg4oCiIFwzM1sxOzM4bfCdmY/wnZmd8J2Zpy3wnZmp8J2ZmvCdmZjwnZmdXVwzM1sxOzM4bSAgICDilZFcMDMzWzE7MzFtIA0K4pWg4pWQ4pWQW/CdmYHwnZi88J2YvvCdmYDwnZi98J2ZivCdmYrwnZmGICAgICAgICAgICAgICAgICDigKIg8J2ZifCdmLzwnZmK8J2ZgyDwnZmP8J2ZjfCdmYTwnZmT8J2ZkyAgICAgICDilZEgIFwwMzNbMTs5N20gIA0K4pWg4pWQ4pWQW/CdmYLwnZmE8J2Zj/CdmYPwnZmQ8J2YvSAgICAgICAgICAgICAgICAgICDigKIgXDMzWzE7MzhtYvCdmY/wnZmd8J2Zpy3wnZmp8J2ZmvCdmZjwnZmdIOKVkVwzM1sxOzM0bSAgIA0K4pWg4pWQ4pWQW/CdmZLwnZmD8J2YvPCdmY/wnZi88J2Zi/CdmYsgICAgICAgICAgICAgICAgIOKAoiA5NzY1MzIwNDEqICAg4pWRXDMzWzE7MzVtIA0K4pWg4pWQ4pWQW/CdmY/wnZmK8J2ZivCdmYfwnZmOICAgICAgICAgICAgICAgICAgICDigKIg8J2Zi/CdmLzwnZmE8J2YvyBdICAgICAgICAg4pWRIFwzM1sxOzMybSAgIA0K4pWg4pWQ4pWQW/CdmL3wnZmA8J2ZjfCdmY7wnZmE8J2ZivCdmYkgICAgICAgICAgICAgICAgICDigKIgMi4wIF0gICAgICAgICAg4pWRXDAzM1sxOzM1bSANClwwMzNbMDs5NG3ilZrilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilZ1cMDMzWzE7MzFtDQpcMDMzWzE7OTJt4oqw4a+94oqx4pSI4pSA4pSA4pWM4pSA4pSA4pSA4pSA4pSA4pSA4pWM4pSA4pSA4pWM4pWM4pSA4pSA4pWM4pSA4pSA4pSA4pWM4p2K4pWM4pSA4pSA4pWM4pSA4pSA4pWM4pSA4pSA4pSA4pSA4pWM4pSA4pSA4pSA4pSA4pWM4pSA4pWM4pSA4pSA4pSI4oqw4a+94oqxDQpcMDMzWzE7OTFtW1wwMzNbMTs5Mm3iiJpcMDMzWzE7OTFtXVwwMzNbMTs5Mm0g8J2ZkvCdmYDwnZmH8J2YvvCdmYrwnZmI8J2ZgCDwnZmP8J2ZiiDwnZmJ8J2YvPCdmYrwnZmDIPCdmY/wnZmN8J2ZhPCdmZPwnZmTIPCdmY/wnZmK8J2ZivCdmYcgXDAzM1sxOzk1beKIsCBcMDMzWzE7OTVt4oiwIFwwMzNbMTs5MW3iiLAgXDAzM1sxOzkybeKIsCBcMDMzWzE7OTNt4oiwICAgICAgICAgICAgICAgICAgXDAzM1sxOzkxbVtcMDMzWzE7OTJt4oiaXDAzM1sxOzkxbV0NClwwMzNbMTs5Mm3iirDhr73iirHilIjilIDilIDilYzilIDilIDilIDilIDilIDilIDilYzilIDilIDilYzilYzilIDilIDilYzilIDilIDilIDilYzinYrilYzilIDilIDilYzilIDilIDilYzilIDilIDilIDilIDilYzilIDilIDilIDilIDilYzilIDilYzilIDilIDilIjiirDhr73iirENClwwMzNbMTs5MW1bXDAzM1sxOzkybeKImlwwMzNbMTs5MW1dXDAzM1sxOzkybSDwnZmJ8J2YvPCdmYrwnZmDIPCdmY/wnZmN8J2ZhPCdmZPwnZmTIPCdmL7wnZmU8J2YvfCdmYDwnZmNIPCdmZPwnZmK8J2ZifCdmYDimaFcMDMzWzE7OTVt4oiwIFwwMzNbMTs5NW3iiLAgXDAzM1sxOzkxbeKIsCBcMDMzWzE7OTJt4oiwIFwwMzNbMTs5M23iiLAgICAgICAgICAgICAgXDAzM1sxOzkxbVtcMDMzWzE7OTJt4oiaXDAzM1sxOzkxbV0NClwwMzNbMTs5Mm3iirDhr73iirHilIjilIDilIDilYzilIDilIDilIDilIDilIDilIDilYzilIDilIDilYzilYzilIDilIDilYzilIDilIDilIDilYzinYrilYzilIDilIDilYzilIDilIDilYzilIDilIDilIDilIDilYzilIDilIDilIDilIDilYzilIDilYzilIDilIDilIjiirDhr73iirEiIiIpDQpiYWxwYWtuYSA9KCIiIlx4MWJbMzg7NTs1MG3ilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZAiIiIpICAgIA0KbWV5ZXJtYXJleHVkaSA9KCIiIiBcMDMzWzA7OTdtPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IiIiKSAgICANCmFsbHRpbWV4dWRpID0oIiIiIFwwMzNbMzI7MW1bLV0gNyDwnZi/8J2YvPCdmZQg8J2YvPCdmYvwnZmL8J2ZjfCdmYrwnZmR8J2YvPCdmYc9MyQiIiIpDQp4dWRhcnRpbWVuYWkgPSgiIiIgXDAzM1szMjsxbVsrXSDwnZi+8J2ZivCdmYnwnZmP8J2ZjfCdmLzwnZi+8J2ZjyDwnZi88J2Yv/CdmYjwnZmE8J2ZiSIiIikNCmZ1Y2t5b3Vyc2FsaSA9KCIiIiBcMDMzWzMyOzFtW/Cdn7ddIPCdmZTwnZmK8J2ZkPCdmY0g8J2ZhvCdmYDwnZmUIPCdmY7wnZmQ8J2ZmPCdmZjwnZma8J2ZqPCdmajwnZmb8J2ZqvCdmaHwnZmUIPCdmLzwnZmL8J2ZjfCdmYrwnZmR8J2ZgPCdmL8iIiIpDQp4dWRpbmFtaW5pc3RhciA9KCIiIiBcMDMzWzMyOzFtWy1dIEltcG9ydGVudCBOb3RlICIiIikNCmhlZGFib3Jha2FyZW50ID0oIiIiIFwwMzNbMzI7MW1b8J2fuF0g8J2Yv/CdmYrwnZmJJ/CdmY8g8J2Zj/CdmY3wnZmUIPCdmY/wnZmKIPCdmL/wnZmA8J2YviAiIiIpDQojX19fX0FQUFJPVkFMIFNZU1RFTSBBRERfX19fXyMNCmRlZiBtZXlleHVkaSgpOg0KICBvcy5zeXN0ZW0oJ2NsZWFyJykNCiAgcHJpbnQobG9nbykNCiAgdXVpZCA9IHN0cihvcy5nZXRldWlkKCkpICsgc3RyKG9zLmdldGxvZ2luKCkpDQogIGlkID0gIi0iLmpvaW4odXVpZCkNCiAgdHJ5Og0KICAgIGh0dHBDYWh0ID0gcmVxdWVzdHMuZ2V0KCdodHRwczovL2dpdGh1Yi5jb20vVGhyLXRlY2gvTk9BSC1UUklYWC9ibG9iL21haW4vTk9BSCUyMC1UUklYWC50eHQnKS50ZXh0DQogICAgaWYgaWQgaW4gaHR0cENhaHQ6DQogICAgICBwcmludChmdWNreW91cnNhbGkpDQogICAgICBwcmludChoZWRhYm9yYWthcmVudCkNCiAgICAgIG1zZyA9IHN0cihvcy5nZXRldWlkKCkpDQogICAgICAjdGltZS5zbGVlcCgwLjUpDQogICAgICBwcmludCgpDQogICAgICBwYXNzDQogICAgZWxzZToNCiAgICAgIHByaW50KG1leWVybWFyZXh1ZGkpDQogICAgICMgcHJpbnQoIiBcMDMzWzMyOzFtWytdIFlvdXIgS2F5IDogIitpZCkNCiAgICAgIHByaW50KCcgXHgxYlszODs1OzIwOG3ilZTilZDilZBb8J2ft10g8J2Zj/CdmYPwnZmE8J2YvyDwnZmP8J2ZivCdmYrwnZmHIPCdmYTwnZmOIPCdmYvwnZi88J2ZhPCdmL8nKQ0KICAgICAgcHJpbnQoJyBceDFiWzE7OTdt4pWR4pWQ4pWQW/Cdn7hdIPCdmYLwnZi88J2ZiPCdmYAg8J2ZhPCdmL8gK/CdmY/wnZmPIPCdmYTwnZi/IPCdmL7wnZmH8J2ZivCdmYnwnZmNJykNCiAgICAgIHByaW50KCcgXHgxYlsxOzkxbeKVkeKVkOKVkFvwnZ+4XSDwnZi+8J2ZiyDwnZmE8J2YvyDwnZmN8J2ZgPCdmYjwnZmK8J2ZkfCdmYAnKQ0KICAgICAgcHJpbnQoJyBceDFiWzE7OTJt4pWR4pWQ4pWQW/Cdn7hdIPCdmYrwnZmJ8J2Zh/CdmZQg8J2YvPCdmL7wnZmP8J2ZhPCdmZHwnZmAIPCdmYTwnZi/8J2ZjiDwnZi+8J2YvPCdmYjwnZmAJykNCiAgICAgIHByaW50KCcgXHgxYlsxOzkzbeKVkeKVkOKVkFvwnZ+4XSDwnZi+8J2ZiyDwnZmE8J2Yv/CdmY4g8J2Zh/CdmYrwnZmC8J2ZhPCdmYkgODAgJScpDQogICAgICBwcmludCgnIFx4MWJbMTs5NG3ilZHilZDilZBb8J2fuF0g8J2ZkvCdmYTwnZmB8J2ZniDwnZmS8J2ZivCdmY3wnZmG8J2ZhPCdmYnwnZmCICcpDQogICAgICBwcmludCgnIFx4MWJbMTs5NW3ilZHilZDilZBb8J2fuF0gMTUg8J2Yv/CdmLzwnZmUIPCdmYHwnZmK8J2ZjSA4JCcpDQogICAgICBwcmludCgnIFx4MWJbMzg7NTs1MG3ilZHilZDilZBb8J2fuF0gMzAg8J2Yv/CdmLzwnZmUIDEwJCcpDQogICAgICBwcmludCgiIFwwMzNbMTszMm3ilZHilZDilZBb8J2fuF0gWU9VUiBLRVkgOiAiK2lkKQ0KICAgICAgaW5wdXQoJyBceDFiWzM4OzU7NTBt4pWa4pWQ4pWQW/Cdn7ldIPCdmYDwnZmJ8J2Zj/CdmYDwnZmNIPCdmLzwnZmJ8J2YvyDwnZi98J2ZkPCdmZQg8J2Zj/CdmYPwnZmE8J2ZjiDwnZmP8J2ZivCdmYrwnZmHJykNCiAgICAgIHRrcyA9ICgnSGVsbG8gTmFvaC0lMjBUUklYWCUyMCElMjBwbHp6IGZhc3QlMjBhcHByb3ZlZCUyMG15JTIwa2V5JTIwVGhlJTIwVG9rZW4lMjBJcyUyMDolMjAnK2lkKTtvcy5zeXN0ZW0oJ2FtIHN0YXJ0IGh0dHBzOi8vd2EubWUvKzk3Nzk3NjUzMjA0MTc/dGV4dD0nK3RrcyksYXBwcm92YWwoKSAgICAgIA0KICAgICAgdGltZS5zbGVlcCgxKQ0KICAgICAgbWV5ZXh1ZGkoKQ0KICBleGNlcHQ6DQogICAgc3lzLmV4aXQoKQ0KbWV5ZXh1ZGkoKQ0KI29zLnN5c3RlbSgicHl0aG9uIE5PQUggLVRSSVhYLnB5IikNCmRlZiBuYWltYSgpOg0KCXByaW50KCctLS0tLS0tLS0tLS0tLS0tLS0tJykNCnByaW50KGxvZ28pDQpvcy5zeXN0ZW0oJ2VzcGVhayAtYSAzMDAgIiBZb3VyLCAgIFJlYWwsICBOYW1lLCInKQ0KdW5hbWUgPWlucHV0KCdcMDMzWzE7OTFtW1wwMzNbMTs5Mm3iiJpcMDMzWzE7OTFtXSBceDFiWzM4OzU7NTBtRU5URVIgWU9VUiBOQU1FIFwwMzNbMTs5MW06IFwzM1sxOzMybScpDQpvcy5zeXN0ZW0oJ2VzcGVhayAtYSAzMDAgIiBXZWxjb21lLCAgIHRvLCAgTk9BSCAtVFJJWFgsICBWIEkgUCwgIFRvb2xzIicpDQpkZWYgYmFjaygpOg0KCWxvZ2luKCkNCgkNCglpbXBvcnQgZ2V0cGFzcw0KDQphdHRlbXBzID0gMA0KDQp3aGlsZSBhdHRlbXBzIDwgMTIzNDU2Nzc5MDE6DQogICAgdXNlcm5hbWUgPSBpbnB1dCgnXDAzM1sxOzkxbVtcMDMzWzE7OTJt4oiaXDAzM1sxOzkxbV1ceDFiWzM4OzU7NTBtIEVOVEVSIFVTRVJOQU1FOiAnKQ0KICAgIHBhc3N3b3JkID0gaW5wdXQoJ1wwMzNbMTs5MW1bXDAzM1sxOzkybeKImlwwMzNbMTs5MW1dXHgxYlszODs1OzUwbSBFTlRFUiBQQVNTV09SRDogJykNCg0KICAgIGlmIHVzZXJuYW1lID09ICdOT0FIJyBhbmQgcGFzc3dvcmQgPT0gJ1RSSVhYJzoNCiAgICAgICAgcHJpbnQoJyBcMDMzWzA7OTJtWW91IEhhdmUgU3VjY2Vzc2Z1bGx5IExvZ2dlZCBpbi4nKQ0KICAgICAgICBicmVhaw0KICAgIGVsc2U6DQogICAgICAgIHByaW50KCcgSW5jb3JyZWN0IFBhc3MgUGxlYXNlIFRyeWluZyAnKQ0KICAgICAgICBhdHRlbXBzICs9IDENCiAgICAgICAgY29udGludWUNCm9zLnN5c3RlbSgnY2xlYXInKQ0KcGFzcw0KIA0KIA0KZGVmIGxvZ2luKCk6DQogICAgdHJ5Og0KICAgICAgICB0b2tlbiA9IG9wZW4oJy50b2tlbi50eHQnLCdyJykucmVhZCgpDQogICAgICAgIGNvayA9IG9wZW4oJy5jb2sudHh0JywncicpLnJlYWQoKQ0KICAgICAgICB0b2tlbmt1LmFwcGVuZCh0b2tlbikNCiAgICAgICAgdHJ5Og0KICAgICAgICAgICAgc3kgPSByZXF1ZXN0cy5nZXQoJ2h0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tL21lP2ZpZWxkcz1pZCxuYW1lJmFjY2Vzc190b2tlbj0nK3Rva2Vua3VbMF0sIGNvb2tpZXM9eydjb29raWUnOmNva30pDQogICAgICAgICAgICBzeTIgPSBqc29uLmxvYWRzKHN5LnRleHQpWyduYW1lJ10NCiAgICAgICAgICAgIHN5MyA9IGpzb24ubG9hZHMoc3kudGV4dClbJ2lkJ10NCiAgICAgICAgICAgIG1lbnUoc3kyLHN5MykNCiAgICAgICAgZXhjZXB0IEtleUVycm9yOg0KICAgICAgICAgICAgbG9naW5fbGFnaTMzNCgpDQogICAgICAgIGV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoNCiAgICAgICAgICAgIHByaW50KCdcMDMzWzA7OTdtPT09PT09PT09PT09PT09PT0nKQ0KICAgICAgICAgICAgYW5pbWF0aW9uKCcgW8OXXSDwn4e+IPCfh7Ug8J+HuiDwn4e3ICDwn4euIPCfh7Mg8J+HuSDwn4e3IPCfh6og8J+HsyDwn4eqIPCfh7kgIPCfh7kg8J+HtCAg8J+HuCDwn4exIPCfh7Qg8J+HvCDwn5iFJykNCiAgICAgICAgICAgIGV4aXQoKQ0KICAgIGV4Y2VwdCBJT0Vycm9yOg0KICAgICAgICBsb2dpbl9sYWdpMzM0KCkNCmRlZiBsb2dpbl9sYWdpMzM0KCk6DQogICAgdHJ5Og0KICAgICAgICBvcy5zeXN0ZW0oJ2NsZWFyJykNCiAgICAgICAgcHJpbnQobG9nbykNCiAgICAgICAgc2VzID0gcmVxdWVzdHMuU2Vzc2lvbigpDQogICAgICAgIGNvb2tpZXMgPSB7J2Nvb2tpZSc6Y29va2llfQ0KICAgICAgICB1cmwgPSAnaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL2Fkc21hbmFnZXIvbWFuYWdlL2NhbXBhaWducycNCiAgICAgICAgcmVxID0gc2VzLmdldCh1cmwsY29va2llcz1jb29raWVzKQ0KICAgICAgICBzZXQgPSByZS5zZWFyY2goJ2FjdD0oLio/KSZuYXZfc291cmNlJyxzdHIocmVxLmNvbnRlbnQpKS5ncm91cCgxKQ0KICAgICAgICBuZWsgPSAnJXM/YWN0PSVzJm5hdl9zb3VyY2U9bm9fcmVmZXJyZXInJSh1cmwsc2V0KQ0KICAgICAgICByb3EgPSBzZXMuZ2V0KG5layxjb29raWVzPWNvb2tpZXMpDQogICAgICAgIHRvayA9IHJlLnNlYXJjaCgnYWNjZXNzVG9rZW49IiguKj8pIicsc3RyKHJvcS5jb250ZW50KSkuZ3JvdXAoMSkNCiAgICAgICAgdG9rZW53ID0gb3BlbigiLnRva2VuLnR4dCIsICJ3Iikud3JpdGUodG9rKQ0KICAgICAgICBjb2tpZXcgPSBvcGVuKCIuY29rLnR4dCIsICJ3Iikud3JpdGUoY29va2llKQ0KICAgICAgI2V4aXQoKQ0KICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToNCiAgICAgICAgb3Muc3lzdGVtKCJybSAtZiAudG9rZW4udHh0IikNCiAgICAgICAgb3Muc3lzdGVtKCJybSAtZiAuY29rLnR4dCIpDQogICAgICAgIG9zLnN5c3RlbSgicHl0aG9uIG5vbm8ucHkiKQ0KICAgICAgICBleGl0KCkNCg0KIy0tLS0tLS0tLS0tLS0tLS0tLVsgTUVOVSBdLS0tLS0tLS0tLS0tLS0tLSMNCiAjPT09wqk9PT0jDQpjbGFzcyBqYWxhbjoNCiAgICBkZWYgX19pbml0X18oc2VsZiwgeik6DQogICAgICAgIGZvciBlIGluIHogKyAiXG4iOg0KICAgICAgICAgICAgc3lzLnN0ZG91dC53cml0ZShlKQ0KICAgICAgICAgICAgc3lzLnN0ZG91dC5mbHVzaCgpDQogICAgICAgICAgICB0aW1lLnNsZWVwKDAuMDQwKQ0KZGVmIG1lbnUoKToNCiAgICBvcy5zeXN0ZW0oJ2NsZWFyJykNCiAgICBwcmludChsb2dvKQ0KICAgIHByaW50KGYiXDAzM1sxOzkxbVtcMDMzWzE7OTJt4oiaXDAzM1sxOzkxbV0gXDAzM1s5MjsxXHgxYlsxOzk3bfCdmojwnZm+8J2ahPCdmoEg8J2ag/Cdmb7wnZm+8J2Zu/CdmoIg8J2ZsPCdmbLwnZqD8J2ZuPCdmoXwnZm0IFx4MWJbMzg7NTs1MG1b8J2Zv/CdmoHwnZm08J2ZvPCdmbjwnZqE8J2ZvF0gIikNCiAgICBwcmludChmIlwwMzNbMTs5MW1bXDAzM1sxOzkybeKImlwwMzNbMTs5MW1dXDAzM1sxOzkybSBceDFiWzM4OzU7NTBtVVNFUiBOQU1FXDAzM1sxOzkxbSA6XDAzM1sxOzk2bSAiK3VuYW1lKQ0KICAgIHByaW50KCJcMDMzWzE7OTFtW1wwMzNbMTs5Mm3iiJpcMDMzWzE7OTFtXVwwMzNbMTs5Mm0gXDAzM1swOzkzbVRPREFZIERBVEUgOlx4MWJbMzg7NTs1MG0gIitkYXRlKQ0KICAgIHByaW50KCdcMDMzWzA7OTdtPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0nKQ0KICAgIHByaW50KGYiIiJceDFiWzE7OTdt4pWU4pWQ4pWQXDAzM1sxOzkxbVtcMDMzWzE7OTJtMVwwMzNbMTs5MW1dXDAzM1sxOzkybSBcMDMzWzE7OTZtRklMRSBDTE9ORSAgICAgICAgICAiIiIpDQogICAgcHJpbnQoIiIiXHgxYlsxOzkxbeKVkeKVkOKVkFwwMzNbMTs5MW1bXDAzM1sxOzkybTJcMDMzWzE7OTFtXVwwMzNbMTs5Mm0gXDAzM1swOzkzbUZPTExPVyBNWSBHSVRIVUIiIiIpDQogICAgcHJpbnQoZiIiIlx4MWJbMTs5Mm3ilZHilZDilZBcMDMzWzE7OTFtW1wwMzNbMTs5Mm0zXDAzM1sxOzkxbV1cMDMzWzE7OTJtIFx4MWJbMTs5NW1DSEVDSyBPSyBJRCBBTkQgQ1AgSUQgICAiIiIpDQogICAgcHJpbnQoIiIiXHgxYlsxOzkzbeKVmuKVkOKVkFwwMzNbMTs5MW1bXDAzM1sxOzkybTRcMDMzWzE7OTFtXVwwMzNbMTs5Mm0gXHgxYlszODs1OzUwbUVYSVQiIiIpDQogICAgcHJpbnQoJ1x4MWJbMzg7NTs1MOKVkeKVkOKVkD09PT09PT09PT09PT09PT09JykNCiAgICBOT0FIPSBpbnB1dCgnXHgxYlwwMzNbMTs5MW1bXDAzM1sxOzkybeKImlwwMzNbMTs5MW1dIFwwMzNbMTs5Nm1DSE9PU0U6ICcpDQogICAgaWYgTk9BSCBpbiBbJzExMSddOg0KICAgICAgICBsb2dpbigpDQogICAgICAgIGR1bXBfbWFzc2FsKCkNCiAgICBlbGlmIE5PQUggaW4gWycxJ106DQogICAgICAgIGNyYWNrX2ZpbGUoKQ0KICAgIGVsaWYgTk9BSCBpbiBbJzInLCcwMiddOg0KICAgICAgICBvcy5zeXN0ZW0oJ3hkZy1vcGVuIGh0dHBzOi8vZ2l0aHViLmNvbS9UaHItdGVjaC9OT0FILVRSSVhYL2Jsb2IvbWFpbi9OT0FIJTIwLVRSSVhYLnR4dCcpDQogICAgICAgIG9zLnN5c3RlbSgicHl0aG9uIG5vbm8ucHkiKQ0KICAgIGVsaWYgTk9BSCBpbiBbJzMnLCcwMyddOg0KICAgICAgICByZXN1bHQoKQ0KICAgIGVsaWYgTk9BSCBpbiBbJzAnXToNCiAgICAgICAgb3Muc3lzdGVtKCdybSAtcmYgLnRva2VuLnR4dCcpDQogICAgICAgIG9zLnN5c3RlbSgncm0gLXJmIC5jb29raWUudHh0JykNCiAgICAgICAgcHJpbnQoJ1wwMzNbMDs5N209PT09PT09PT09PT09PT09PScpDQogICAgICAgIGFuaW1hdGlvbignIFvDl10gRE9ORSBFWElUICcpDQogICAgICAgIGV4aXQoKQ0KICAgIGVsc2U6DQogICAgICAgIHByaW50KCdcMDMzWzA7OTdtPT09PT09PT09PT09PT09PT0nKQ0KICAgICAgICBhbmltYXRpb24oJyBbw5ddIFNFTEVDVCBDT1JSRUNUTFkgJykNCiAgICAgICAgYmFjaygpDQogDQogICAgIy0tLS0tLS0tLS0tLS0tLS0tWyBIQVNJTC1DUkFDSyBdLS0tLS0tLS0tLS0tLS0tLS0jDQogDQpkZWYgcmVzdWx0KCk6DQogICAgb3Muc3lzdGVtKCdjbGVhcicpDQogICAgcHJpbnQobG9nbykNCiAgICBwcmludCgnXHgxYlsxOzkxbeKVlOKVkOKVkFvwnZ+3XSAgXHgxYlszODs1OzUwbUNIRUNLIENQIElEWiAnKQ0KICAgIHByaW50KCdceDFiWzE7OTJt4pWR4pWQ4pWQW/Cdn7hdICBceDFiWzM4OzU7NTBtIE9LIElEWiAnKQ0KICAgIHByaW50KCdceDFiWzE7OTNt4pWa4pWQ4pWQW/Cdn7ldICBceDFiWzM4OzU7NTBtICcpDQogICAgcHJpbnQoJ1x4MWJbMzg7NTs1MG09PT09PT09PT09PT09PT09PT0nKQ0KICAgIGt6ID0gaW5wdXQoJyBcMDMzWzE7OTFtW1wwMzNbMTs5Mm3iiJpcMDMzWzE7OTFtXSBcMDMzWzE7OTZtQ0hPT1NFIDogJykNCiAgICBpZiBreiBpbiBbJzEnLCcwMSddOg0KICAgICAgICB0cnk6dmluID0gb3MubGlzdGRpcignQ1AnKQ0KICAgICAgICBleGNlcHQgRmlsZU5vdEZvdW5kRXJyb3I6DQogICAgICAgICAgICBwcmludCgnXHgxYlszODs1OzUwbT09PT09PT09PT09PT09PT09PScpDQogICAgICAgICAgICBhbmltYXRpb24oJyBcMDMzWzk3OzFtW1x4MWJbMzg7NTs1MG3igKJcMDMzWzk3OzFtXSBGSUxFIE5PVCBGT1VORCAnKQ0KICAgICAgICAgICAgdGltZS5zbGVlcCgzKQ0KICAgICAgICAgICAgYmFjaygpDQogICAgICAgIGlmIGxlbih2aW4pPT0wOg0KICAgICAgICAgICAgcHJpbnQoJ1x4MWJbMzg7NTs1MG09PT09PT09PT09PT09PT09PT0nKQ0KICAgICAgICAgICAgYW5pbWF0aW9uKCcgXDAzM1s5NzsxbVtceDFiWzM4OzU7NTBt4oCiXDAzM1s5NzsxbV0gTk8gQ1AgUkVTVUxUUyBGT1VORCAnKQ0KICAgICAgICAgICAgdGltZS5zbGVlcCgyKQ0KICAgICAgICAgICAgYmFjaygpDQogICAgICAgIGVsc2U6DQogICAgICAgICAgICBjaWggPSAwDQogICAgICAgICAgICBsb2wgPSB7fQ0KICAgICAgICAgICAgZm9yIGlzaSBpbiB2aW46DQogICAgICAgICAgICAgICAgdHJ5OmhlbSA9IG9wZW4oJ0NQLycraXNpLCdyJykucmVhZGxpbmVzKCkNCiAgICAgICAgICAgICAgICBleGNlcHQ6Y29udGludWUNCiAgICAgICAgICAgICAgICBjaWgrPTENCiAgICAgICAgICAgICAgICBpZiBjaWg8MTA6DQogICAgICAgICAgICAgICAgICAgIG5vbSA9ICcnK3N0cihjaWgpDQogICAgICAgICAgICAgICAgICAgIGxvbC51cGRhdGUoe3N0cihjaWgpOnN0cihpc2kpfSkNCiAgICAgICAgICAgICAgICAgICAgbG9sLnVwZGF0ZSh7bm9tOnN0cihpc2kpfSkNCiAgICAgICAgICAgICAgICAgICAgcHJpbnQoJ1x4MWJbMzg7NTs1MG09PT09PT09PT09PT09PT09PT0nKQ0KICAgICAgICAgICAgICAgICAgICBwcmludCgnICcrbm9tKycuICcraXNpKydcMDMzWzMxbSAnK3N0cihsZW4oaGVtKSkrJyBcMDMzWzBtIENQICcreCkNCiAgICAgICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgICAgICBsb2wudXBkYXRlKHtzdHIoY2loKTpzdHIoaXNpKX0pDQogICAgICAgICAgICAgICAgICAgIHByaW50KCcgJytzdHIoY2loKSsnLiAnK2lzaSsnXDAzM1szMW0gJytzdHIobGVuKGhlbSkpKycgXDAzM1swbSBDUCAnK3gpDQogICAgICAgICAgICBwcmludCgnXHgxYlszODs1OzUwbT09PT09PT09PT09PT09PT09PScpDQogICAgICAgICAgICBnZWVoID0gaW5wdXQoJyBcMDMzWzk3OzFtW1x4MWJbMzg7NTs1MG3igKJcMDMzWzk3OzFtXSBDSE9PU0UgOiAnKQ0KICAgICAgICAgICAgcHJpbnQoJ1x4MWJbMzg7NTs1MG09PT09PT09PT09PT09PT09PT0nKQ0KICAgICAgICAgICAgdHJ5OmdlaCA9IGxvbFtnZWVoXQ0KICAgICAgICAgICAgZXhjZXB0IEtleUVycm9yOg0KICAgICAgICAgICAgICAgIHByaW50KCdceDFiWzM4OzU7NTBtPT09PT09PT09PT09PT09PT09JykNCiAgICAgICAgICAgICAgICBhbmltYXRpb24oJyBcMDMzWzk3OzFtW1x4MWJbMzg7NTs1MG3igKJcMDMzWzk3OzFtXSBOTyBPUFRJT04gRk9VTkQgJykNCiAgICAgICAgICAgICAgICBleGl0KCkNCiAgICAgICAgICAgIHRyeTpsaW4gPSBvcGVuKCdDUC8nK2dlaCwncicpLnJlYWQoKS5zcGxpdGxpbmVzKCkNCiAgICAgICAgICAgIGV4Y2VwdDoNCiAgICAgICAgICAgICAgICBwcmludCgnXHgxYlszODs1OzUwbT09PT09PT09PT09PT09PT09PScpDQogICAgICAgICAgICAgICAgYW5pbWF0aW9uKCcgXDAzM1s5NzsxbVtceDFiWzM4OzU7NTBt4oCiXDAzM1s5NzsxbV0gRklMRSBOT1QgRk9VTkQgJykNCiAgICAgICAgICAgICAgICB0aW1lLnNsZWVwKDIpDQogICAgICAgICAgICAgICAgYmFjaygpDQogICAgICAgICAgICBub0NQPTANCiAgICAgICAgICAgIGZvciBDUGt1IGluIHJhbmdlKGxlbihsaW4pKToNCiAgICAgICAgICAgICAgICBDUGt1bmk9bGluW25vQ1BdLnNwbGl0KCd8JykNCiAgICAgICAgICAgICAgICBwcmludChmJyBcMDMzWzk3OzFtW1x4MWJbMzg7NTs1MG3igKJcMDMzWzk3OzFtXSBDUCA6IFwwMzNbMzNtIHtDUGt1bmlbMF19fHtDUGt1bmlbMV19XDAzM1swbScpDQogICAgICAgICAgICAgICAgbm9DUCArPTENCiAgICAgICAgICAgIHByaW50KCdceDFiWzM4OzU7NTBtPT09PT09PT09PT09PT09PT09JykNCiAgICAgICAgICAgIGlucHV0KCdcMDMzWzk3OzFtW1x4MWJbMzg7NTs1MG3igKJcMDMzWzk3OzFtXSBQUkVTUyBFTlRFUiBUTyBCQUNLICcpDQogICAgICAgICAgICBiYWNrKCkNCiAgICBlbGlmIGt6IGluIFsnMicsJzAyJ106DQogICAgICAgIHRyeTp2aW4gPSBvcy5saXN0ZGlyKCdPSycpDQogICAgICAgIGV4Y2VwdCBGaWxlTm90Rm91bmRFcnJvcjoNCiAgICAgICAgICAgIHByaW50KCdceDFiWzM4OzU7NTBtPT09PT09PT09PT09PT09PT09JykNCiAgICAgICAgICAgIGFuaW1hdGlvbignIFwwMzNbOTc7MW1bXHgxYlszODs1OzUwbeKAolwwMzNbOTc7MW1dIEZJTEUgTk9UIEZPVU5EICcpDQogICAgICAgICAgICB0aW1lLnNsZWVwKDIpDQogICAgICAgICAgICBiYWNrKCkNCiAgICAgICAgaWYgbGVuKHZpbik9PTA6DQogICAgICAgICAgICBwcmludCgnXHgxYlszODs1OzUwbT09PT09PT09PT09PT09PT09PScpDQogICAgICAgICAgICBhbmltYXRpb24oJyBcMDMzWzk3OzFtW1x4MWJbMzg7NTs1MG3igKJcMDMzWzk3OzFtXSBOTyBPSyBSRVNVTFRTIEZPVU5EICcpDQogICAgICAgICAgICB0aW1lLnNsZWVwKDIpDQogICAgICAgICAgICBiYWNrKCkNCiAgICAgICAgZWxzZToNCiAgICAgICAgICAgIGNpaCA9IDANCiAgICAgICAgICAgIGxvbCA9IHt9DQogICAgICAgICAgICBmb3IgaXNpIGluIHZpbjoNCiAgICAgICAgICAgICAgICB0cnk6aGVtID0gb3BlbignT0svJytpc2ksJ3InKS5yZWFkbGluZXMoKQ0KICAgICAgICAgICAgICAgIGV4Y2VwdDpjb250aW51ZQ0KICAgICAgICAgICAgICAgIGNpaCs9MQ0KICAgICAgICAgICAgICAgIGlmIGNpaDwxMDA6DQogICAgICAgICAgICAgICAgICAgIHByaW50KCdceDFiWzM4OzU7NTBtPT09PT09PT09PT09PT09PT09JykNCiAgICAgICAgICAgICAgICAgICAgbm9tID0gJycrc3RyKGNpaCkNCiAgICAgICAgICAgICAgICAgICAgbG9sLnVwZGF0ZSh7c3RyKGNpaCk6c3RyKGlzaSl9KQ0KICAgICAgICAgICAgICAgICAgICBsb2wudXBkYXRlKHtub206c3RyKGlzaSl9KQ0KICAgICAgICAgICAgICAgICAgICBwcmludCgnICcrbm9tKycuICcraXNpKydcMDMzWzMybSAnK3N0cihsZW4oaGVtKSkrJyBcMDMzWzBtIE9LICcreCkNCiAgICAgICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgICAgICBsb2wudXBkYXRlKHtzdHIoY2loKTpzdHIoaXNpKX0pDQogICAgICAgICAgICAgICAgICAgIHByaW50KCcgJytzdHIoY2loKSsnLiAnK2lzaSsnXDAzM1szMm0gJytzdHIobGVuKGhlbSkpKycgXDAzM1swbSBPSyAnK3gpDQogICAgICAgICAgICBwcmludCgnXHgxYlszODs1OzUwbT09PT09PT09PT09PT09PT09PScpDQogICAgICAgICAgICBnZWVoID0gaW5wdXQoJyBceDFiWzE7OTJtIFvigKJdIENIT09TRSA6ICcpDQogICAgICAgICAgICBwcmludCgnXHgxYlszODs1OzUwbT09PT09PT09PT09PT09PT09PScpDQogICAgICAgICAgICB0cnk6Z2VoID0gbG9sW2dlZWhdDQogICAgICAgICAgICBleGNlcHQgS2V5RXJyb3I6DQogICAgICAgICAgICAgICAgcHJpbnQoJ1x4MWJbMzg7NTs1MG09PT09PT09PT09PT09PT09PT0nKQ0KICAgICAgICAgICAgICAgIGFuaW1hdGlvbignIFwwMzNbOTc7MW1bXHgxYlszODs1OzUwbeKAolwwMzNbOTc7MW1dIE5PIE9QVElPTiBGT1VORCAnKQ0KICAgICAgICAgICAgICAgIGV4aXQoKQ0KICAgICAgICAgICAgdHJ5OmxpbiA9IG9wZW4oJ09LLycrZ2VoLCdyJykucmVhZCgpLnNwbGl0bGluZXMoKQ0KICAgICAgICAgICAgZXhjZXB0Og0KICAgICAgICAgICAgICAgIHByaW50KCdceDFiWzM4OzU7NTBtPT09PT09PT09PT09PT09PT09JykNCiAgICAgICAgICAgICAgICBhbmltYXRpb24oJyBcMDMzWzk3OzFtW1x4MWJbMzg7NTs1MG3igKJcMDMzWzk3OzFtXSBGSUxFIE5PVCBGT1VORCAnKQ0KICAgICAgICAgICAgICAgIHRpbWUuc2xlZXAoMikNCiAgICAgICAgICAgICAgICBiYWNrKCkNCiAgICAgICAgICAgIG5vQ1A9MA0KICAgICAgICAgICAgZm9yIENQa3UgaW4gcmFuZ2UobGVuKGxpbikpOg0KICAgICAgICAgICAgICAgIENQa3VuaT1saW5bbm9DUF0uc3BsaXQoJ3wnKQ0KICAgICAgICAgICAgICAgIHByaW50KGYnXDAzM1s5NzsxbVtceDFiWzM4OzU7NTBt4oCiXDAzM1s5NzsxbV0gT0sgOiBcMDMzWzMybSB7Q1BrdW5pWzBdfXx7Q1BrdW5pWzFdfVwwMzNbMG0nKQ0KICAgICAgICAgICAgICAgIG5vQ1AgKz0xDQogICAgICAgICAgICBwcmludCgnXHgxYlszODs1OzUwbT09PT09PT09PT09PT09PT09PScpDQogICAgICAgICAgICBpbnB1dCgnXDAzM1s5NzsxbVtceDFiWzM4OzU7NTBt4oCiXDAzM1s5NzsxbV0gUFJFU1MgRU5URVIgVE8gQkFDSyAnKQ0KICAgICAgICAgICAgYmFjaygpDQogICAgZWxpZiBreiBpbiBbJzAnLCcwMCddOg0KICAgICAgICBiYWNrKCkNCiAgICBlbHNlOg0KICAgICAgICBwcmludCgnXHgxYlszODs1OzUwbT09PT09PT09PT09PT09PT09PScpDQogICAgICAgIGFuaW1hdGlvbignIFwwMzNbOTc7MW1bXHgxYlszODs1OzUwbeKAolwwMzNbOTc7MW1dIE5PIE9QVElPTiBGT1VORCBJTiBNRU5VJykNCiAgICAgICAgZXhpdCgpDQogDQojLS0tLS0tLS0tLS0tLS0tLS0tLVsgQ1JBQ0stUFVCTElLIF0tLS0tLS0tLS0tLS0tLS0tIw0KIA0KZGVmIGR1bXBfbWFzc2FsKCk6DQogICAgdHJ5Og0KICAgICAgICB0b2tlbiA9IG9wZW4oJy50b2tlbi50eHQnLCdyJykucmVhZCgpDQogICAgICAgIGNvayA9IG9wZW4oJy5jb2sudHh0JywncicpLnJlYWQoKQ0KICAgIGV4Y2VwdCBJT0Vycm9yOg0KICAgICAgICBleGl0KCkNCiAgICB0cnk6DQogICAgICAgIHByaW50KCdceDFiWzM4OzU7NTBtPT09PT09PT09PT09PT09PT09JykNCiAgICAgICAganVtID0gaW50KGlucHV0KCcgXDAzM1s5NzsxbVtceDFiWzM4OzU7NTBt4oCiXDAzM1s5NzsxbV0gRU5URVIgVEFSR0VUIEFNT1VOVCAgOiAnKSkNCiAgICAgICAgcHJpbnQoJ1x4MWJbMzg7NTs1MG09PT09PT09PT09PT09PT09PT0nKQ0KICAgIGV4Y2VwdCBWYWx1ZUVycm9yOg0KICAgICAgICBwcmludCgnXHgxYlszODs1OzUwbT09PT09PT09PT09PT09PT09PScpDQogICAgICAgIGFuaW1hdGlvbignIFvDl10gSU5WQUxJRCBPUFRJT04gJykNCiAgICAgICAgZXhpdCgpDQogICAgaWYganVtPDEgb3IganVtPjEwMDAwMDAwMDoNCiAgICAgICAgcHJpbnQoJ1x4MWJbMzg7NTs1MG09PT09PT09PT09PT09PT09PT0nKQ0KICAgICAgICBhbmltYXRpb24oJyBbw5ddIFRSWSBBR0FJTiAnKQ0KICAgICAgICBleGl0KCkNCiAgICBzZXM9cmVxdWVzdHMuU2Vzc2lvbigpDQogICAgeXogPSAwDQogICAgZm9yIG1ldCBpbiByYW5nZShqdW0pOg0KICAgICAgICB5eis9MQ0KICAgICAgICBrbCA9IGlucHV0KCcgXDAzM1s5NzsxbVtceDFiWzM4OzU7NTBt4oCiXDAzM1s5NzsxbV0gSU5QVVQgVUlEICcrc3RyKHl6KSsnIDogJykNCiAgICAgICAgdWlkLmFwcGVuZChrbCkNCiAgICBmb3IgdXNlcnIgaW4gdWlkOg0KICAgICAgICB0cnk6DQogICAgICAgICAgICBjb2wgPSBzZXMuZ2V0KCdodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS92Mi4wLycrdXNlcnIrJz9maWVsZHM9ZnJpZW5kcy5saW1pdCg1MDAwKSZhY2Nlc3NfdG9rZW49Jyt0b2tlbmt1WzBdLCBjb29raWVzID0geydjb29raWVzJzpjb2t9KS5qc29uKCkNCiAgICAgICAgICAgIGZvciBtaSBpbiBjb2xbJ2ZyaWVuZHMnXVsnZGF0YSddOg0KICAgICAgICAgICAgICAgIHRyeToNCiAgICAgICAgICAgICAgICAgICAgaXNvID0gKG1pWydpZCddKyd8JyttaVsnbmFtZSddKQ0KICAgICAgICAgICAgICAgICAgICBpZiBpc28gaW4gaWQ6cGFzcw0KICAgICAgICAgICAgICAgICAgICBlbHNlOmlkLmFwcGVuZChpc28pDQogICAgICAgICAgICAgICAgZXhjZXB0OmNvbnRpbnVlDQogICAgICAgIGV4Y2VwdCAoS2V5RXJyb3IsSU9FcnJvcik6DQogICAgICAgICAgICBwYXNzDQogICAgICAgIGV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoNCiAgICAgICAgICAgIHByaW50KCdceDFiWzM4OzU7NTBtPT09PT09PT09PT09PT09PT09JykNCiAgICAgICAgICAgIGFuaW1hdGlvbignIFvDl10gVFJZIEFHQUlOICcpDQogICAgICAgICAgICBvcy5zeXN0ZW0oJ2NsZWFyJykNCiAgICB0cnk6DQogICAgICAgIHByaW50KCdceDFiWzM4OzU7NTBtPT09PT09PT09PT09PT09PT09JykNCiAgICAgICAgcHJpbnQoZicgXDAzM1s5NzsxbVtceDFiWzM4OzU7NTBt4oCiXDAzM1s5NzsxbV0gVE9UQUwgSUQgOiBcdTAwMWJbMzZtJytzdHIobGVuKGlkKSkrJ1wwMzNbMTszN20nKQ0KICAgICAgICBzZXR0aW5nKCkNCiAgICBleGNlcHQgcmVxdWVzdHMuZXhjZXB0aW9ucy5Db25uZWN0aW9uRXJyb3I6DQogICAgICAgIHByaW50KGYne3V9JykNCiAgICAgICAgYmFjaygpDQogICAgZXhjZXB0IChLZXlFcnJvcixJT0Vycm9yKToNCiAgICAgICAgcHJpbnQoJ1x4MWJbMzg7NTs1MG09PT09PT09PT09PT09PT09PT0nKQ0KICAgICAgICBhbmltYXRpb24oIiBbw5ddIERVTVAgSUQgRkFJTEVEICIpDQogICAgICAgIHRpbWUuc2xlZXAoMykNCiAgICAgICAgYmFjaygpDQogDQojLS0tLS0tLS0tLS0tLVsgQ1JBQ0stRlJPTS1GSUxFIF0tLS0tLS0tLS0tLS0tLS0tLS0jDQogDQpkZWYgY3JhY2tfZmlsZSgpOg0KICAgIHByaW50KCdceDFiWzM4OzU7NTBtPT09PT09PT09PT09PT09PT09JykNCiAgICBvcy5zeXN0ZW0oJ2VzcGVhayAtYSAzMDAgIiB5b3VyIGZpbGUgbmFtZSInKQ0KICAgIHByaW50KCdcMDMzWzE7OTFtW1wwMzNbMTs5Mm3iiJpcMDMzWzE7OTFtXSBcMDMzWzE7OTZtUFVUIEZJTEUgTkFNRSBFWEFNUExFOiAvc2RjYXJkL2ZpbGUudHh0IEV0Yy5dJykNCiAgICBvID0gaW5wdXQoJ1wwMzNbMTs5MW1bXDAzM1sxOzkybeKImlwwMzNbMTs5MW1dIFwwMzNbMTs5Nm1JTlRFUiBZT1VSIEZJTEUgTkFNRSA6XHgxYlsxOzk1bSAnKQ0KICAgIHRyeTpsaW4gPSBvcGVuKG8pLnJlYWQoKS5zcGxpdGxpbmVzKCkNCiAgICBleGNlcHQ6DQogICAgICAgIHByaW50KCdceDFiWzM4OzU7NTBtPT09PT09PT09PT09PT09PT09JykNCiAgICAgICAgYW5pbWF0aW9uKCcgW8OXXSBGSUxFIE5PVCBGT1VORCcpDQogICAgICAgIHRpbWUuc2xlZXAoMikNCiAgICAgICAgYmFjaygpDQogICAgZm9yIHhpZCBpbiBsaW46DQogICAgICAgIGlkLmFwcGVuZCh4aWQpDQogICAgc2V0dGluZygpDQogDQojLS0tLS0tLS0tLS0tLVsgUEVOR0FUVVJBTi1JRFogXS0tLS0tLS0tLS0tLS0tLSMNCiANCmRlZiBzZXR0aW5nKCk6DQogICAgcHJpbnQoJ1x4MWJbMzg7NTs1MG09PT09PT09PT09PT09PT09PT09PT09PT09PT09PScpDQogICAgcHJpbnQoIlx4MWJbMTs5MW3ilZTilZDilZBcMDMzWzE7OTFtW1wwMzNbMTs5Mm0xXDAzM1sxOzkxbV1cMDMzWzE7OTJtIFx4MWJbMzg7NTs1MG1DTE9ORUlORyBGT1IgT05MWSBPTEQgSUR6IikNCiAgICBwcmludCgiXHgxYlsxOzkybeKVkeKVkOKVkFwwMzNbMTs5MW1bXDAzM1sxOzkybTJcMDMzWzE7OTFtXVwwMzNbMTs5Mm0gXDAzM1swOzkzbUNMT05FSU5HIEZPUiBPTkxZIE5FVyBJRHoiKQ0KICAgIHByaW50KCJceDFiWzE7OTNt4pWa4pWQ4pWQXDAzM1sxOzkxbVtcMDMzWzE7OTJtM1wwMzNbMTs5MW1dXDAzM1sxOzkybSBceDFiWzM4OzU7NTBtQ0xPTkVJTkcgRk9SIE1JWCBJRHoiKQ0KICAgIHByaW50KCdceDFiWzM4OzU7NTBtPT09PT09PT09PT09PT09PT09PT09PT09PT09PT0nKQ0KICAgIGh1ID0gaW5wdXQoJ1wwMzNbOTc7MW1bXHgxYlszODs1OzUwbeKImlwwMzNbOTc7MW1dIFwwMzNbMTs5Nm1DSE9PU0UgOlx4MWJbMzg7NTs1MG0gJykNCiAgICBpZiBodSBpbiBbJzEnLCcwMSddOg0KICAgICAgICBmb3IgdHVhIGluIHNvcnRlZChpZCk6DQogICAgICAgICAgICBpZDIuYXBwZW5kKHR1YSkNCiAgICBlbGlmIGh1IGluIFsnMicsJzAyJ106DQogICAgICAgIG11ZGE9W10gDQogICAgICAgIGZvciBiYWNvdCBpbiBzb3J0ZWQoaWQpOg0KICAgICAgICAgICAgbXVkYS5hcHBlbmQoYmFjb3QpDQogICAgICAgIGJjbT1sZW4obXVkYSkNCiAgICAgICAgYmNtaT0oYmNtLTEpDQogICAgICAgIGZvciB4bXVkIGluIHJhbmdlKGJjbSk6DQogICAgICAgICAgICBpZDIuYXBwZW5kKG11ZGFbYmNtaV0pDQogICAgICAgICAgICBiY21pIC09MQ0KICAgIGVsaWYgaHUgaW4gWyczJywnMDMnXToNCiAgICAgICAgZm9yIGJhY290IGluIGlkOg0KICAgICAgICAgICAgeHggPSByYW5kb20ucmFuZGludCgwLGxlbihpZDIpKQ0KICAgICAgICAgICAgaWQyLmluc2VydCh4eCxiYWNvdCkNCiAgICBlbHNlOg0KICAgICAgICBmb3IgYmFjb3QgaW4gaWQ6DQogICAgICAgICAgICB4eCA9IHJhbmRvbS5yYW5kaW50KDAsbGVuKGlkMikpDQogICAgICAgICAgICBpZDIuaW5zZXJ0KHh4LGJhY290KQ0KICAgIHByaW50KCdceDFiWzM4OzU7NTBtPT09PT09PT09PT09PT09PT09JykNCiAgICBwcmludCgnXHgxYlszODs1OzUwbT09PT09PT09PT09PT09PT09PScpDQogICAgcHJpbnQoIlx4MWJbMTs5MW3ilZTilZDilZBcMDMzWzE7OTFtW1wwMzNbMTs5Mm0xXDAzM1sxOzkxbV1cMDMzWzE7OTJtIFx4MWJbMzg7NTs1MG0gQ09PS0lFUyAgW1x4MWJbMTs5NW0xXHgxYlszODs1OzUwbV0iKQ0KICAgIHByaW50KCJceDFiWzE7OTNt4pWa4pWQ4pWQXDAzM1sxOzkxbVtcMDMzWzE7OTJtMlwwMzNbMTs5MW1dXDAzM1sxOzkybSBceDFiWzM4OzU7NTBtIENQIElEIFtceDFiWzM4OzU7NTBtMlx4MWJbMTs5NW1dIikNCiAgICBwcmludCgnXHgxYlszODs1OzUwbT09PT09PT09PT09PT09PT09PScpDQogICAgaGMgPSBpbnB1dCgnXDAzM1sxOzkxbVtcMDMzWzE7OTJt4oiaXDAzM1sxOzkxbV0gXDAzM1sxOzk2bUNIT09TRTogJykNCiAgICAjb3Muc3lzdGVtKCJ4ZGctb3BlbiBodHRwczovL3d3dy5mYWNlYm9vay5jb20vTk9BSCAtVFJJWFguS2luZy5Pay5Ccm8iKQ0KICAgIGlmIGhjIGluIFsnMScsJzAxJ106DQogICAgICAgIG1ldGhvZC5hcHBlbmQoJ21vYmlsZScpDQogICAgZWxpZiBoYyBpbiBbJzInLCcwMiddOg0KICAgICAgICBtZXRob2QuYXBwZW5kKCdmcmVlJykNCiAgICBlbHNlOg0KICAgICAgICBtZXRob2QuYXBwZW5kKCdtb2JpbGUnKQ0KICAgIHBhc3N3cmQoKQ0KICAgIGV4aXQoKSANCiANCiMtLS0tLS0tLS0tLS0tLS0tLS0tWyBCQUdJQU4tV09SRExJU1QgXS0tLS0tLS0tLS0tLSMNCiANCmRlZiBwYXNzd3JkKCk6DQogICAgb3Muc3lzdGVtKCdjbGVhcicpDQogICAgcHJpbnQobG9nbykNCiAgICBwcmludChmJ1x4MWJbMTs5M21ceDFiWzE7OTNt4omn4peJXHgxYlsxOzkzbV0gXHgxYlsxOzk3bfCdmYTwnZmBIPCdmYTwnZi/8J2ZlSDwnZmJ8J2ZivCdmY8g8J2YvvCdmYrwnZmI8J2YvyDwnZmP8J2ZjfCdmZDwnZmJIPCdmYrwnZmJL/CdmYrwnZmB8J2ZgSDwnZmB8J2Zh/CdmYTwnZmC8J2Zg/CdmY8g8J2ZiPCdmYrwnZi/8J2ZgOC8kl0gJykNCiAgICBwcmludChmIlx4MWJbMTs5MW1ceDFiWzE7OTFt4omn4peJXHgxYlsxOzkzbV0gXHgxYlsxOzkxbfCdmZTwnZmK8J2ZkPCdmY0g8J2ZifCdmLzwnZmI8J2ZgFx4MWJbMTs5M20gOlx4MWJbMTs5M20gIivwnZqe8J2al/CdmorwnZqW8J2ajikNCiAgICBwcmludCgnXHgxYlsxOzkybVtceDFiWzE7OTRt4omn4peJXHgxYlsxOzkzbV0gXHgxYlsxOzkybfCdmYHwnZmE8J2Zh/CdmYAg8J2Zj/CdmYrwnZmP8J2YvPCdmYcg8J2ZhPCdmL/wnZmOXHgxYlsxOzkzbTpceDFiWzE7OTNtICcsc3RyKGxlbihpZCkpKQ0KICAgIHByaW50KCJceDFiWzE7OTNtXHgxYlsxOzkzbeKJp+KXiVx4MWJbMTs5M21dIFx4MWJbMTs5M21bMTs5N23wnZmO8J2Zj/CdmLzwnZmN8J2ZjyDwnZmP8J2ZhPCdmYjwnZmAXHgxYlsxOzkzbSA6PiBceDFiWzE7OTNtIit0aW1lLnN0cmZ0aW1lKCIlSDolTSIpKyIgIisgdGFnKQ0KICAgIHByaW50KCJceDFiWzE7OTdtXHgxYlsxOzkybeKJp+KXiVx4MWJbMTs5M21dIFx4MWJbMTs5NG3wnZmP8J2ZivCdmYrwnZmHIPCdmYTwnZmOIPCdmYHwnZmE8J2ZjfCdmYAtIfCflKUiKQ0KICAgIHByaW50KGYnXHgxYlsxOzkzbVx4MWJbMTs5M23iiafil4lceDFiWzE7OTNtXSBceDFiWzE7OTdt8J2ZiPCdmYDwnZmP8J2Zg/CdmYrwnZmN8J2Yvz0g8J2Yv/CdmLzwnZmP8J2YvC/wnZmS8J2ZhPCdmYHwnZmEIOKsqOKtlV0gJykNCiAgICBwcmludCgnXHgxYlsxOzkzbT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09JykNCiAgICB3aXRoIHRyZWQobWF4X3dvcmtlcnM9MzApIGFzIHBvb2w6DQogICAgICAgIGZvciB5dXpvbmcgaW4gaWQyOg0KICAgICAgICAgICAgaWRmLG5tZiA9IHl1em9uZy5zcGxpdCgnfCcpWzBdLHl1em9uZy5zcGxpdCgnfCcpWzFdLmxvd2VyKCkNCiAgICAgICAgICAgIGZycyA9IG5tZi5zcGxpdCgnICcpWzBdDQogICAgICAgICAgICBwd3YgPSBbXQ0KICAgICAgICAgICAgaWYgbGVuKG5tZik8NjoNCiAgICAgICAgICAgICAgICBpZiBsZW4oZnJzKTwzOg0KICAgICAgICAgICAgICAgICAgICBwYXNzDQogICAgICAgICAgICAgICAgZWxzZToNCiAgICAgICAgICAgICAgICAgICAgcHd2LmFwcGVuZChmcnMrJzEyJykNCiAgICAgICAgICAgICAgICAgICAgcHd2LmFwcGVuZChmcnMrJzIyJykNCiAgICAgICAgICAgICAgICAgICAgcHd2LmFwcGVuZChmcnMrJ0AxMicpDQogICAgICAgICAgICAgICAgICAgIHB3di5hcHBlbmQoZnJzKyc0NDU1JykNCiAgICAgICAgICAgICAgICAgICAgcHd2LmFwcGVuZChmcnMrJzAwJykNCiAgICAgICAgICAgICAgICAgICAgcHd2LmFwcGVuZChmcnMrJzEyMycpDQogICAgICAgICAgICAgICAgICAgIHB3di5hcHBlbmQoZnJzKycxMjM0JykNCiAgICAgICAgICAgICAgICAgICAgcHd2LmFwcGVuZChmcnMrJ0AxMjM0JykNCiAgICAgICAgICAgICAgICAgICAgcHd2LmFwcGVuZChmcnMrJzEyMzQ1NicpDQogICAgICAgICAgICAgICAgICAgIHB3di5hcHBlbmQobm1mKQ0KICAgICAgICAgICAgICAgICAgICBwd3YuYXBwZW5kKCc1NzI3MzIwMCcpDQogICAgICAgICAgICAgICAgICAgIHB3di5hcHBlbmQoZnJzKydAMTIzJykNCiAgICAgICAgICAgICAgICAgICAgcHd2LmFwcGVuZChmcnMrJ0AnKQ0KICAgICAgICAgICAgICAgICAgICBwd3YuYXBwZW5kKGZycysnQEAnKQ0KICAgICAgICAgICAgICAgICAgICBwd3YuYXBwZW5kKGZycysnQCMnKQ0KICAgICAgICAgICAgICAgICAgICBwd3YuYXBwZW5kKGZycysnMTEyMicpDQogICAgICAgICAgICAgICAgICAgIHB3di5hcHBlbmQoZnJzKycxMScpDQogICAgICAgICAgICAgICAgICAgIHB3di5hcHBlbmQoZnJzKycjMTEnKQ0KICAgICAgICAgICAgICAgICAgICBwd3YuYXBwZW5kKGZycysnQDExMjInKQ0KICAgICAgICAgICAgICAgICAgICBwd3YuYXBwZW5kKGZycysnQDExJykNCiAgICAgICAgICAgICAgICAgICAgcHd2LmFwcGVuZChmcnMrJ0AyMicpDQogICAgICAgICAgICAgICAgICAgIHB3di5hcHBlbmQoZnJzKycjIycpICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgZWxzZToNCiAgICAgICAgICAgICAgICBpZiBsZW4oZnJzKTwzOg0KICAgICAgICAgICAgICAgICAgICBwd3YuYXBwZW5kKG5tZikNCiAgICAgICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgICAgICBwd3YuYXBwZW5kKGZycysnMTInKQ0KICAgICAgICAgICAgICAgICAgICBwd3YuYXBwZW5kKGZycysnMjInKQ0KICAgICAgICAgICAgICAgICAgICBwd3YuYXBwZW5kKGZycysnQDEyJykNCiAgICAgICAgICAgICAgICAgICAgcHd2LmFwcGVuZChmcnMrJzQ0NTUnKQ0KICAgICAgICAgICAgICAgICAgICBwd3YuYXBwZW5kKGZycysnMDAnKSAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgcHd2LmFwcGVuZChmcnMrJzEyMycpDQogICAgICAgICAgICAgICAgICAgIHB3di5hcHBlbmQoZnJzKycxMjM0JykNCiAgICAgICAgICAgICAgICAgICAgcHd2LmFwcGVuZChmcnMrJ0AxMjM0JykNCiAgICAgICAgICAgICAgICAgICAgcHd2LmFwcGVuZChmcnMrJzEyMzQ1NicpDQogICAgICAgICAgICAgICAgICAgIHB3di5hcHBlbmQobm1mKQ0KICAgICAgICAgICAgICAgICAgICBwd3YuYXBwZW5kKCc1NzI3MzIwMCcpDQogICAgICAgICAgICAgICAgICAgIHB3di5hcHBlbmQoZnJzKydAMTIzJykNCiAgICAgICAgICAgICAgICAgICAgcHd2LmFwcGVuZChmcnMrJ0AnKQ0KICAgICAgICAgICAgICAgICAgICBwd3YuYXBwZW5kKGZycysnQEAnKQ0KICAgICAgICAgICAgICAgICAgICBwd3YuYXBwZW5kKGZycysnQCMnKQ0KICAgICAgICAgICAgICAgICAgICBwd3YuYXBwZW5kKGZycysnMTEyMicpDQogICAgICAgICAgICAgICAgICAgIHB3di5hcHBlbmQoZnJzKycxMScpDQogICAgICAgICAgICAgICAgICAgIHB3di5hcHBlbmQoZnJzKycjMTEnKQ0KICAgICAgICAgICAgICAgICAgICBwd3YuYXBwZW5kKGZycysnQDExMjInKQ0KICAgICAgICAgICAgICAgICAgICBwd3YuYXBwZW5kKGZycysnQDExJykNCiAgICAgICAgICAgICAgICAgICAgcHd2LmFwcGVuZChmcnMrJ0AyMicpDQogICAgICAgICAgICAgICAgICAgIHB3di5hcHBlbmQoZnJzKycjIycpDQogICAgICAgICAgICBpZiAneWEnIGluIHB3cGx1c3M6DQogICAgICAgICAgICAgICAgZm9yIHhwd2QgaW4gcHdueWE6DQogICAgICAgICAgICAgICAgICAgIHB3di5hcHBlbmQoeHB3ZCkNCiAgICAgICAgICAgIGVsc2U6cGFzcw0KICAgICAgICAgICAgaWYgJ21vYmlsZScgaW4gbWV0aG9kOg0KICAgICAgICAgICAgICAgIHBvb2wuc3VibWl0KGNyYWNrLGlkZixwd3YpDQogICAgICAgICAgICBlbGlmICdmcmVlJyBpbiBtZXRob2Q6DQogICAgICAgICAgICAgICAgcG9vbC5zdWJtaXQoY3JhY2tmcmVlLGlkZixwd3YpDQogICAgICAgICAgICBlbGlmICd0b3VjaCcgaW4gbWV0aG9kOg0KICAgICAgICAgICAgICAgIHBvb2wuc3VibWl0KGNyYWNrZnJlZSxpZGYscHd2KQ0KICAgICAgICAgICAgZWxpZiAnbWJhc2ljJyBpbiBtZXRob2Q6DQogICAgICAgICAgICAgICAgcG9vbC5zdWJtaXQoY3JhY2tmcmVlLGlkZixwd3YpDQogICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgIHBvb2wuc3VibWl0KGNyYWNrZnJlZSxpZGYscHd2KQ0KICAgIHByaW50KCdcblwwMzNbMTszN209PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PScpDQogICAgcHJpbnQoJ1wwMzNbOTc7MW1bXDAzM1s5MjsxbStcMDMzWzk3OzFtXSBDTE9OSU5HIENPTVBMRVRFIFRJTUUgOlwwMzNbMTs5Mm0nK3RpbWUuc3RyZnRpbWUoIiVIOiVNIikrIiAiKyB0YWcpDQogICAgcHJpbnQoJ1wwMzNbOTc7MW1bXDAzM1s5MjsxbeKAolwwMzNbOTc7MW1dIE9LIDpcMDMzWzA7OTJtICVzICclKE9LKSkNCiAgICBwcmludCgnXDAzM1s5NzsxbVtcMDMzWzkyOzFtK1wwMzNbOTc7MW1dIENQIDpcMDMzWzA7OTNtICVzICclKENQKSkNCiAgICBwcmludCgnXG5cMDMzWzE7MzdtPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0nKQ0KICAgIHdvaSA9IGlucHV0KCdcMDMzWzk3OzFtW1wwMzNbOTI7MW0rXDAzM1s5NzsxbV0gXDAzM1sxOzM3bSBFTlRFUiBUTyBCQUNLJykNCiAgICBvcy5zeXN0ZW0oInB5dGhvbiBOT0FIIC1UUklYWC02LTMucHkiKQ0KICAgIGV4aXQoKQ0KIA0KIy0tLS0tLS0tLS0tLS0tLS0tLS0tWyBNRVRPREUtQi1BUEkgXS0tLS0tLS0tLS0tLS0tLS0tIw0KIA0KZGVmIGNyYWNrKGlkZixwd3YpOg0KICAgIGdsb2JhbCBsb29wLG9rLENQDQogICAgYm8gPSByYW5kb20uY2hvaWNlKFttLGssaCxiLHUseF0pDQogICAgc3lzLnN0ZG91dC53cml0ZShmIlxyXDAzM1sxMDA7OTJte2JvfVtOT0FIIC1UUklYWC1PTl0te1B9W3tIfXtsb29wfXtQfV0tW3tIfXtsZW4oaWQpfXtQfV0tW3tIfU9Le2JvfS17SH17b2t9e1B9XS1be1B9eyd7Oi4wJX0nLmZvcm1hdChsb29wL2Zsb2F0KGxlbihpZCkpKX17UH1dXDAzM1swOzM3bSAiKSwNCiAgICBzeXMuc3Rkb3V0LmZsdXNoKCkNCiAgICB1YSA9IHJhbmRvbS5jaG9pY2UodWdlbikNCiAgICB1YTIgPSByYW5kb20uY2hvaWNlKHVnZW4yKQ0KICAgIHNlcyA9IHJlcXVlc3RzLlNlc3Npb24oKQ0KICAgIGZvciBwdyBpbiBwd3Y6DQogICAgICAgIHRyeToNCiAgICAgICAgICAgIG5pcD1yYW5kb20uY2hvaWNlKHByb3gpDQogICAgICAgICAgICBwcm94cz0geydodHRwJzogJ3NvY2tzNDovLycrbmlwfQ0KICAgICAgICAgICAgc2VzLmhlYWRlcnMudXBkYXRlKHsiSG9zdCI6J20uZmFjZWJvb2suY29tJywidXBncmFkZS1pbnNlY3VyZS1yZXF1ZXN0cyI6IjEiLCJ1c2VyLWFnZW50Ijp1YTIsImFjY2VwdCI6InRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCpbaW5zZXJ0ZWQgYnkgY3l0aG9uIHRvIGF2b2lkIGNvbW1lbnQgY2xvc2VyXS9baW5zZXJ0ZWQgYnkgY3l0aG9uIHRvIGF2b2lkIGNvbW1lbnQgc3RhcnRdKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuOSIsImRudCI6IjEiLCJ4LXJlcXVlc3RlZC13aXRoIjoibWFyay52aWEuZ3AiLCJzZWMtZmV0Y2gtc2l0ZSI6InNhbWUtb3JpZ2luIiwic2VjLWZldGNoLW1vZGUiOiJjb3JzIiwic2VjLWZldGNoLXVzZXIiOiJlbXB0eSIsInNlYy1mZXRjaC1kZXN0IjoiZG9jdW1lbnQiLCJyZWZlcmVyIjoiaHR0cHM6Ly9tLmZhY2Vib29rLmNvbS8iLCJhY2NlcHQtZW5jb2RpbmciOiJnemlwLCBkZWZsYXRlIGJyIiwiYWNjZXB0LWxhbmd1YWdlIjoiZW4tR0IsZW4tVVM7cT0wLjksZW47cT0wLjgifSkNCiAgICAgICAgICAgIHAgPSBzZXMuZ2V0KCdodHRwczovL20uZmFjZWJvb2suY29tL2xvZ2luL2RldmljZS1iYXNlZC9wYXNzd29yZC8/dWlkPScraWRmKycmZmxvdz1sb2dpbl9ub19waW4mcmVmc3JjPWRlcHJlY2F0ZWQmX3JkcicpDQogICAgICAgICAgICBkYXRhYSA9eyJsc2QiOnJlLnNlYXJjaCgnbmFtZT0ibHNkIiB2YWx1ZT0iKC4qPykiJywgc3RyKHAudGV4dCkpLmdyb3VwKDEpLCJqYXpvZXN0IjpyZS5zZWFyY2goJ25hbWU9Imphem9lc3QiIHZhbHVlPSIoLio/KSInLCBzdHIocC50ZXh0KSkuZ3JvdXAoMSksInVpZCI6aWRmLCJuZXh0IjoiaHR0cHM6Ly9wLmZhY2Vib29rLmNvbS9sb2dpbi9zYXZlLWRldmljZS8iLCJmbG93IjoibG9naW5fbm9fcGluIiwicGFzcyI6cHcsfQ0KICAgICAgICAgICAga29raSA9ICgiOyIpLmpvaW4oWyAiJXM9JXMiICUgKGtleSwgdmFsdWUpIGZvciBrZXksIHZhbHVlIGluIHAuY29va2llcy5nZXRfZGljdCgpLml0ZW1zKCkgXSkNCiAgICAgICAgICAgIGtva2krPScgbV9waXhlbF9yYXRpbz0yLjYyNTsgd2Q9NDEyeDc1NicNCiAgICAgICAgICAgIGhlYWRlID0geydIb3N0JzogJ20uZmFjZWJvb2suY29tJywgJ3ZpZXdwb3J0LXdpZHRoJzogJzk4MCcsICdzZWMtY2gtdWEnOiAnIiBOb3QgQTtCcmFuZCI7dj0iOTkiLCAiQ2hyb21pdW0iO3Y9IjEwOSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMDkiJywgJ3NlYy1jaC11YS1tb2JpbGUnOiAnPzAnLCAnc2VjLWNoLXVhLXBsYXRmb3JtJzonIldpbmRvd3MiJywgJ3NlYy1jaC1wcmVmZXJzLWNvbG9yLXNjaGVtZSc6ICdsaWdodCcsICdkbnQnOiAnMScsICd1cGdyYWRlLWluc2VjdXJlLXJlcXVlc3RzJzogJzEnLCAndXNlci1hZ2VudCc6dWEsJ2FjY2VwdCc6ICd0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjknLCAnc2VjLWZldGNoLXNpdGUnOiAnbm9uZScsICdzZWMtZmV0Y2gtbW9kZSc6ICduYXZpZ2F0ZScsICdzZWMtZmV0Y2gtdXNlcic6ICc/MScsICdzZWMtZmV0Y2gtZGVzdCc6ICdkb2N1bWVudCcsICdhY2NlcHQtZW5jb2RpbmcnOiAnZ3ppcCwgZGVmbGF0ZSwgYnInLCAnYWNjZXB0LWxhbmd1YWdlJzogJ2VuLVVTLGVuO3E9MC45J30NCiAgICAgICAgICAgIHBvID0gc2VzLnBvc3QoJ2h0dHBzOi8vbS5mYWNlYm9vay5jb20vbG9naW4vZGV2aWNlLWJhc2VkL3ZhbGlkYXRlLXBhc3N3b3JkLz9zaGJsPTAnLGRhdGE9ZGF0YWEsY29va2llcz17J2Nvb2tpZSc6IGtva2l9LGhlYWRlcnM9aGVhZGUsYWxsb3dfcmVkaXJlY3RzPUZhbHNlKQ0KICAgICAgICAgICAgaWYgImNoZWNrcG9pbnQiIGluIHBvLmNvb2tpZXMuZ2V0X2RpY3QoKS5rZXlzKCk6DQogICAgICAgICAgICAgICAgcHJpbnQoZidcclwwMzNbMTA7OTJtXDAzM1sxOzkxbVtcMDMzWzE7OTJtTk9BSCAtVFJJWFgtQ1BcMDMzWzE7OTFtXSBcMDMzWzEwOzkybVwwMzNbMTs5MW1bXDAzM1sxOzkybU5VTVwwMzNbMTs5MW1dPiB7aWRmfSBcMDMzWzEwOzkybVwwMzNbMTs5MW1bXDAzM1sxOzkybVBBU1NcMDMzWzE7OTFtXT4gXDAzM1sxOzkybXtwd30nKQ0KICAgICAgICAgICAgICAgIHByaW50KCdceDFiWzM4OzU7NTBtPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0nKQ0KICAgICAgICAgICAgICAgIG9zLnN5c3RlbSgnZXNwZWFrIC1hIDMwMCAiIENQLCBJRCInKQ0KICAgICAgICAgICAgICAgIG9wZW4oJ0NQLycrQ1BjLCdhJykud3JpdGUoaWRmKycg4oCiICcrcHcrJ1xuJykNCiAgICAgICAgICAgICAgICBha3VuLmFwcGVuZChpZGYrJyDigKIgJytwdykNCiAgICAgICAgICAgICAgICBDUCs9MQ0KICAgICAgICAgICAgICAgIGJyZWFrDQogICAgICAgICAgICBlbGlmICJjX3VzZXIiIGluIHNlcy5jb29raWVzLmdldF9kaWN0KCkua2V5cygpOg0KICAgICAgICAgICAgICAgIG9rKz0xDQogICAgICAgICAgICAgICAgY29raT1wby5jb29raWVzLmdldF9kaWN0KCkNCiAgICAgICAgICAgICAgICBrdWtpID0gKCI7Iikuam9pbihbICIlcz0lcyIgJSAoa2V5LCB2YWx1ZSkgZm9yIGtleSwgdmFsdWUgaW4gc2VzLmNvb2tpZXMuZ2V0X2RpY3QoKS5pdGVtcygpIF0pDQogICAgICAgICAgICAgICAgcHJpbnQoZidcclwwMzNbMTA7OTJtXDAzM1sxOzkxbVtcMDMzWzE7OTJtTk9BSCAtVFJJWFgtT0tcMDMzWzE7OTFtXSBcMDMzWzEwOzkybVwwMzNbMTs5MW1bXDAzM1sxOzkybU5VTVwwMzNbMTs5MW1dPiBceDFiWzM4OzU7NTBte2lkZn0gXDAzM1sxMDs5Mm1cMDMzWzE7OTFtW1wwMzNbMTs5Mm1QQVNTXDAzM1sxOzkxbV0+IFx4MWJbMzg7NTs1MG17cHd9XG5ceDFiWzM4OzU7NTAgXDAzM1sxOzkxbVvwn5KZXVwwMzNbMTs5MW09XDAzM1sxOzkybT0gXHgxYlszODs1OzUwbXtrdWtpfSAnKQ0KICAgICAgICAgICAgICAgIHByaW50KCdceDFiWzM4OzU7NTBtPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0nKQ0KICAgICAgICAgICAgICAgIG9zLnN5c3RlbSgnZXNwZWFrIC1hIDMwMCAiIE5PQUggLVRSSVhYLCAgT2ssICBpZCInKQ0KICAgICAgICAgICAgICAgIG9wZW4oJ09LLycrb2tjLCdhJykud3JpdGUoaWRmKycg4oCiICcrcHcrJ1xuJykNCiAgICAgICAgICAgICAgICBicmVhaw0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgZWxzZToNCiAgICAgICAgICAgICAgICBjb250aW51ZQ0KICAgICAgICBleGNlcHQgcmVxdWVzdHMuZXhjZXB0aW9ucy5Db25uZWN0aW9uRXJyb3I6DQogICAgICAgICAgICB0aW1lLnNsZWVwKDMxKQ0KICAgIGxvb3ArPTENCiANCiMtLS0tLS0tLS0tLS0tLS0tLS1bIE1FVEhPREUtTUJBU0lDLTIgXS0tLS0tLS0tLS0tLS0tLS0tLS0jDQpvcy5zeXN0ZW0oZid4ZGctb3BlbiBodHRwczovL3d3dy5mYWNlYm9vay5jb20vc2hhcmUvNE14SHhZUkZYc1p1ak1QZy8/bWliZXh0aWQ9QTdzUVpwJykNCiANCmRlZiBjcmFja2ZyZWUoaWRmLHB3dik6DQogICAgZ2xvYmFsIGxvb3Asb2ssQ1ANCiAgICBzeXMuc3Rkb3V0LndyaXRlKGYiXHJ7SH1bTk9BSCAtVFJJWFgtT05de1B9LVt7SH17bG9vcH17UH1de1B9LVt7SH17bGVuKGlkKX17UH1dLVtPS3tQfS17SH17b2t9e1B9XSBbe1B9eyd7Oi4wJX0nLmZvcm1hdChsb29wL2Zsb2F0KGxlbihpZCkpKX17UH1dICAiKSwNCiAgICBzeXMuc3Rkb3V0LmZsdXNoKCkNCiAgICB1YSA9IHJhbmRvbS5jaG9pY2UodWdlbikNCiAgICB1YTIgPSByYW5kb20uY2hvaWNlKHVnZW4yKQ0KICAgIHNlcyA9IHJlcXVlc3RzLlNlc3Npb24oKQ0KICAgIGZvciBwdyBpbiBwd3Y6DQogICAgICAgIHRyeToNCiAgICAgICAgICAgIG5pcD1yYW5kb20uY2hvaWNlKHByb3gpDQogICAgICAgICAgICBwcm94cz0geydodHRwJzogJ3NvY2tzNDovLycrbmlwfQ0KICAgICAgICAgICAgc2VzLmhlYWRlcnMudXBkYXRlKHsiSG9zdCI6J20uZmFjZWJvb2suY29tJywidXBncmFkZS1pbnNlY3VyZS1yZXF1ZXN0cyI6IjEiLCJ1c2VyLWFnZW50Ijp1YTIsImFjY2VwdCI6InRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCpbaW5zZXJ0ZWQgYnkgY3l0aG9uIHRvIGF2b2lkIGNvbW1lbnQgY2xvc2VyXS9baW5zZXJ0ZWQgYnkgY3l0aG9uIHRvIGF2b2lkIGNvbW1lbnQgc3RhcnRdKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuOSIsImRudCI6IjEiLCJ4LXJlcXVlc3RlZC13aXRoIjoibWFyay52aWEuZ3AiLCJzZWMtZmV0Y2gtc2l0ZSI6InNhbWUtb3JpZ2luIiwic2VjLWZldGNoLW1vZGUiOiJjb3JzIiwic2VjLWZldGNoLXVzZXIiOiJlbXB0eSIsInNlYy1mZXRjaC1kZXN0IjoiZG9jdW1lbnQiLCJyZWZlcmVyIjoiaHR0cHM6Ly9tLmZhY2Vib29rLmNvbS8iLCJhY2NlcHQtZW5jb2RpbmciOiJnemlwLCBkZWZsYXRlIGJyIiwiYWNjZXB0LWxhbmd1YWdlIjoiZW4tR0IsZW4tVVM7cT0wLjksZW47cT0wLjgifSkNCiAgICAgICAgICAgIHAgPSBzZXMuZ2V0KCdodHRwczovL20uZmFjZWJvb2suY29tL2xvZ2luL2RldmljZS1iYXNlZC9wYXNzd29yZC8/dWlkPScraWRmKycmZmxvdz1sb2dpbl9ub19waW4mcmVmc3JjPWRlcHJlY2F0ZWQmX3JkcicpDQogICAgICAgICAgICBkYXRhYSA9eyJsc2QiOnJlLnNlYXJjaCgnbmFtZT0ibHNkIiB2YWx1ZT0iKC4qPykiJywgc3RyKHAudGV4dCkpLmdyb3VwKDEpLCJqYXpvZXN0IjpyZS5zZWFyY2goJ25hbWU9Imphem9lc3QiIHZhbHVlPSIoLio/KSInLCBzdHIocC50ZXh0KSkuZ3JvdXAoMSksInVpZCI6aWRmLCJuZXh0IjoiaHR0cHM6Ly9wLmZhY2Vib29rLmNvbS9sb2dpbi9zYXZlLWRldmljZS8iLCJmbG93IjoibG9naW5fbm9fcGluIiwicGFzcyI6cHcsfQ0KICAgICAgICAgICAga29raSA9ICgiOyIpLmpvaW4oWyAiJXM9JXMiICUgKGtleSwgdmFsdWUpIGZvciBrZXksIHZhbHVlIGluIHAuY29va2llcy5nZXRfZGljdCgpLml0ZW1zKCkgXSkNCiAgICAgICAgICAgIGtva2krPScgbV9waXhlbF9yYXRpbz0yLjYyNTsgd2Q9NDEyeDc1NicNCiAgICAgICAgICAgIGhlYWRlID0geydIb3N0JzogJ20uZmFjZWJvb2suY29tJywgJ3ZpZXdwb3J0LXdpZHRoJzogJzk4MCcsICdzZWMtY2gtdWEnOiAnIiBOb3QgQTtCcmFuZCI7dj0iOTkiLCAiQ2hyb21pdW0iO3Y9IjEwOSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMDkiJywgJ3NlYy1jaC11YS1tb2JpbGUnOiAnPzAnLCAnc2VjLWNoLXVhLXBsYXRmb3JtJzonIldpbmRvd3MiJywgJ3NlYy1jaC1wcmVmZXJzLWNvbG9yLXNjaGVtZSc6ICdsaWdodCcsICdkbnQnOiAnMScsICd1cGdyYWRlLWluc2VjdXJlLXJlcXVlc3RzJzogJzEnLCAndXNlci1hZ2VudCc6dWEsJ2FjY2VwdCc6ICd0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjknLCAnc2VjLWZldGNoLXNpdGUnOiAnbm9uZScsICdzZWMtZmV0Y2gtbW9kZSc6ICduYXZpZ2F0ZScsICdzZWMtZmV0Y2gtdXNlcic6ICc/MScsICdzZWMtZmV0Y2gtZGVzdCc6ICdkb2N1bWVudCcsICdhY2NlcHQtZW5jb2RpbmcnOiAnZ3ppcCwgZGVmbGF0ZSwgYnInLCAnYWNjZXB0LWxhbmd1YWdlJzogJ2VuLVVTLGVuO3E9MC45J30NCiAgICAgICAgICAgIHBvID0gc2VzLnBvc3QoJ2h0dHBzOi8vbS5mYWNlYm9vay5jb20vbG9naW4vZGV2aWNlLWJhc2VkL3ZhbGlkYXRlLXBhc3N3b3JkLz9zaGJsPTAnLGRhdGE9ZGF0YWEsY29va2llcz17J2Nvb2tpZSc6IGtva2l9LGhlYWRlcnM9aGVhZGUsYWxsb3dfcmVkaXJlY3RzPUZhbHNlKQ0KICAgICAgICAgICAgaWYgImNoZWNrcG9pbnQiIGluIHBvLmNvb2tpZXMuZ2V0X2RpY3QoKS5rZXlzKCk6DQogICAgICAgICAgICAgICAgcHJpbnQoZidcclwwMzNbMTA7OTJtXDAzM1sxOzkxbVtcMDMzWzE7OTJtTk9BSCAtVFJJWFgtQ1BcMDMzWzE7OTFtXSB7aWRmfSDigKIge3B3fScpDQogICAgICAgICAgICAgICAgcHJpbnQoJ1x4MWJbMzg7NTs1MG09PT09PT09PT09PT09PT09PT09PT09PT09PT09JykNCiAgICAgICAgICAgICAgICBvcy5zeXN0ZW0oJ2VzcGVhayAtYSAzMDAgIiBDUCwgSUQiJykNCiAgICAgICAgICAgICAgICBvcGVuKCdDUC8nK0NQYywnYScpLndyaXRlKGlkZisnIOKAoiAnK3B3KydcbicpDQogICAgICAgICAgICAgICAgYWt1bi5hcHBlbmQoaWRmKycg4oCiICcrcHcpDQogICAgICAgICAgICAgICAgQ1ArPTENCiAgICAgICAgICAgICAgICBicmVhaw0KICAgICAgICAgICAgZWxpZiAiY191c2VyIiBpbiBzZXMuY29va2llcy5nZXRfZGljdCgpLmtleXMoKToNCiAgICAgICAgICAgICAgICBvays9MQ0KICAgICAgICAgICAgICAgIGNva2k9cG8uY29va2llcy5nZXRfZGljdCgpDQogICAgICAgICAgICAgICAga3VraSA9ICgiOyIpLmpvaW4oWyAiJXM9JXMiICUgKGtleSwgdmFsdWUpIGZvciBrZXksIHZhbHVlIGluIHNlcy5jb29raWVzLmdldF9kaWN0KCkuaXRlbXMoKSBdKQ0KICAgICAgICAgICAgICAgIHByaW50KGYnXHJcMDMzWzEwOzkybVt7dGltZS5zdHJmdGltZSgiJUg6JU0iKX3igKJOT0FIIC1UUklYWC1PS10gXDAzM1sxOzkybXtpZGZ9IOKAoiBcMDMzWzE7OTJte3B3fSAnKQ0KICAgICAgICAgICAgICAgIHByaW50KCdceDFiWzM4OzU7NTBtPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0nKQ0KICAgICAgICAgICAgICAgIG9zLnN5c3RlbSgnZXNwZWFrIC1hIDMwMCAiIE5PQUggLVRSSVhYLCAgT2ssICBpZCInKQ0KICAgICAgICAgICAgICAgIG9wZW4oJ09LLycrb2tjLCdhJykud3JpdGUoaWRmKycg4oCiICcrcHcrJ1xuJykNCiAgICAgICAgICAgICAgICBicmVhaw0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgZWxzZToNCiAgICAgICAgICAgICAgICBjb250aW51ZQ0KICAgICAgICBleGNlcHQgcmVxdWVzdHMuZXhjZXB0aW9ucy5Db25uZWN0aW9uRXJyb3I6DQogICAgICAgICAgICB0aW1lLnNsZWVwKDMxKQ0KICAgIGxvb3ArPTENCiANCiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVsgU1lTVEVNLUNPTlRST0wgXS0tLS0tLS0tLS0tLS0tLS0tLS0tIw0KIA0KaWYgX19uYW1lX189PSdfX21haW5fXyc6DQogICAgdHJ5Om9zLm1rZGlyKCdPSycpDQogICAgZXhjZXB0OnBhc3MNCiAgICB0cnk6b3MubWtkaXIoJ0NQJykNCiAgICBleGNlcHQ6cGFzcw0KICAgIHRyeTpvcy5zeXN0ZW0oJ3RvdWNoIC5wcm94LnR4dCcpDQogICAgZXhjZXB0OnBhc3MNCm1lbnUoKQ=='))